<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>spring-cloud-Netflix 基本配置</title>
    <url>/2019/12/11/spring-cloud-Netflix-%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Eureka"><a href="#Eureka" class="headerlink" title="Eureka"></a>Eureka</h2><p><strong>pom</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a>


<p><strong>yml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10086</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:$&#123;server.port&#125;/eureka</span></span><br></pre></td></tr></table></figure>

<p><strong>启动类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaServer</span> <span class="comment">// 声明这个应用是一个EurekaServer</span></span><br></pre></td></tr></table></figure>

<p><strong>yml扩展</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10086</span> <span class="comment"># 端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span> <span class="comment"># 应用名称，会在Eureka中显示</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment"># 是否注册自己的信息到EurekaServer，默认是true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment"># 是否拉取其它服务的信息，默认是true</span></span><br><span class="line">    <span class="attr">service-url:</span> <span class="comment"># EurekaServer的地址，现在是自己的地址，如果是集群，需要加上其它Server的地址。</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:$&#123;server.port&#125;/eureka</span></span><br></pre></td></tr></table></figure>

<h2 id="provider"><a href="#provider" class="headerlink" title="provider"></a><strong>provider</strong></h2><p><strong>pom</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>yml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mydb1?useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">user-service</span> <span class="comment"># 应用名称</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span> <span class="comment">#当遇到同样名字的时候，是否允许覆盖注册</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span> <span class="comment"># EurekaServer地址.</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment"># 当调用getHostname获取实例的hostname时，返回ip而不是host名称</span></span><br><span class="line">    <span class="attr">ip-address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="comment"># 指定自己的ip信息，不指定的话会自己寻找</span></span><br></pre></td></tr></table></figure>

<p><strong>启动类</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableEurekaClient // 开启EurekaClient功能</span><br></pre></td></tr></table></figure>

<h2 id="consumer"><a href="#consumer" class="headerlink" title="consumer"></a>consumer</h2><p><strong>pom</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Eureka客户端 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>yml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consumer</span> <span class="comment"># 应用名称</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span> <span class="comment"># EurekaServer地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment"># 当其它服务获取地址时提供ip而不是hostname</span></span><br><span class="line">    <span class="attr">ip-address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="comment"># 指定自己的ip信息，不指定的话会自己寻找</span></span><br></pre></td></tr></table></figure>

<p><strong>启动类</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableDiscoveryClient // 开启Eureka客户端</span><br></pre></td></tr></table></figure>



<h2 id="Hystix"><a href="#Hystix" class="headerlink" title="Hystix"></a>Hystix</h2><p><strong>pom</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>启动类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableHystrix</span> <span class="comment">//启动服务熔断</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@HystrixCommand</span>(fallbackMethod=<span class="string">"xxx"</span>) <span class="comment">//在对应方法上添加 指定处理的方法</span></span><br></pre></td></tr></table></figure>

<p><strong>yml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">  	<span class="attr">default:</span></span><br><span class="line">        <span class="attr">execution:</span></span><br><span class="line">          <span class="attr">isolation:</span></span><br><span class="line">            <span class="attr">thread:</span></span><br><span class="line">              <span class="attr">timeoutInMilliseconds:</span> <span class="number">6000</span> <span class="comment"># 设置hystrix的超时时间为6000ms</span></span><br></pre></td></tr></table></figure>

<h2 id="Feign"><a href="#Feign" class="headerlink" title="Feign"></a>Feign</h2><p><strong>pom</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>接口配置</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"user-service"</span>)  <span class="comment">//指定服务</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserFeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)  <span class="comment">//指定服务请求方法</span></span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>启动类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients</span> <span class="comment">// 开启Feign功能</span></span><br></pre></td></tr></table></figure>

<p><strong>重试机制配置</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">user-service:</span>  <span class="string">//加服务名则是单个服务配置</span>  <span class="string">不加则是全局配置</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="attr">ConnectTimeout:</span> <span class="number">250</span> <span class="comment"># 连接超时时间(ms)</span></span><br><span class="line">    <span class="attr">ReadTimeout:</span> <span class="number">1000</span> <span class="comment"># 通信超时时间(ms)</span></span><br><span class="line">    <span class="attr">OkToRetryOnAllOperations:</span> <span class="literal">true</span> <span class="comment"># 是否对所有操作重试</span></span><br><span class="line">    <span class="attr">MaxAutoRetriesNextServer:</span> <span class="number">1</span> <span class="comment"># 同一服务不同实例的重试次数</span></span><br><span class="line">    <span class="attr">MaxAutoRetries:</span> <span class="number">1</span> <span class="comment"># 同一实例的重试次数</span></span><br></pre></td></tr></table></figure>

<p><strong>熔断支持</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 开启Feign的熔断功能</span></span><br></pre></td></tr></table></figure>

<h2 id="zuul"><a href="#zuul" class="headerlink" title="zuul"></a>zuul</h2><p><strong>pom</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>yml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-zuul</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">5</span> <span class="comment"># 获取服务列表的周期：5s</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ip-address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">retryable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">ConnectTimeout:</span> <span class="number">2</span> <span class="number">50</span> <span class="comment"># 连接超时时间(ms)</span></span><br><span class="line">  <span class="attr">ReadTimeout:</span> <span class="number">2000</span> <span class="comment"># 通信超时时间(ms)</span></span><br><span class="line">  <span class="attr">OkToRetryOnAllOperations:</span> <span class="literal">true</span> <span class="comment"># 是否对所有操作重试</span></span><br><span class="line">  <span class="attr">MaxAutoRetriesNextServer:</span> <span class="number">2</span> <span class="comment"># 同一服务不同实例的重试次数</span></span><br><span class="line">  <span class="attr">MaxAutoRetries:</span> <span class="number">1</span> <span class="comment"># 同一实例的重试次数</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMillisecond:</span> <span class="number">6000</span> <span class="comment"># 熔断超时时长：6000ms</span></span><br></pre></td></tr></table></figure>

<p><strong>启动类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableZuulProxy</span>  <span class="comment">//启动zuul网关</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">//启动eureka客户端</span></span><br></pre></td></tr></table></figure>



<h2 id="消费者拉取服务列表"><a href="#消费者拉取服务列表" class="headerlink" title="消费者拉取服务列表"></a>消费者拉取服务列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(<span class="string">"user-service"</span>);</span><br><span class="line">      <span class="comment">//2、由于我们没有集群，只有一个，所以直接取出第一个</span></span><br><span class="line">      ServiceInstance instance = instances.get(<span class="number">0</span>);</span><br><span class="line">      <span class="comment">//3、拼接URL</span></span><br><span class="line">      String url = <span class="string">"http://"</span>+instance.getHost()+<span class="string">":"</span>+instance.getPort()+<span class="string">"/user/"</span>+id;</span><br></pre></td></tr></table></figure>

<h2 id="设置服务心跳"><a href="#设置服务心跳" class="headerlink" title="设置服务心跳"></a>设置服务心跳</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">2</span> <span class="comment"># 2秒即过期</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">1</span> <span class="comment"># 1秒一次心跳</span></span><br></pre></td></tr></table></figure>

<h2 id="设置服务列表更新时间"><a href="#设置服务列表更新时间" class="headerlink" title="设置服务列表更新时间"></a>设置服务列表更新时间</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<h2 id="失效剔除和自我保护"><a href="#失效剔除和自我保护" class="headerlink" title="失效剔除和自我保护"></a>失效剔除和自我保护</h2><p>服务每隔30秒会发生一次心跳,当一个服务未按时进行心跳续约时，Eureka会统计最近15分钟心跳失败的服务实例的比例是否超过了85% 如果超过了85% Eureka就会把服务保护起来并不会立即剔除</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">enable-self-preservation:</span> <span class="literal">false</span> <span class="comment"># 关闭自我保护模式（缺省为打开）</span></span><br><span class="line">    <span class="attr">eviction-interval-timer-in-ms:</span> <span class="number">1000</span> <span class="comment"># 扫描失效服务的间隔时间（缺省为60*1000ms）</span></span><br></pre></td></tr></table></figure>

<h2 id="重试机制配置"><a href="#重试机制配置" class="headerlink" title="重试机制配置"></a>重试机制配置</h2><p><strong>pom</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.retry<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-retry<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>yml</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">loadbalancer:</span></span><br><span class="line">      <span class="attr">retry:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 开启Spring Cloud的重试功能</span></span><br><span class="line"><span class="attr">user-service:</span></span><br><span class="line">  <span class="attr">ribbon:</span></span><br><span class="line">    <span class="attr">ConnectTimeout:</span> <span class="number">250</span> <span class="comment"># Ribbon的连接超时时间</span></span><br><span class="line">    <span class="attr">ReadTimeout:</span> <span class="number">1000</span> <span class="comment"># Ribbon的数据读取超时时间</span></span><br><span class="line">    <span class="attr">OkToRetryOnAllOperations:</span> <span class="literal">true</span> <span class="comment"># 是否对所有操作都进行重试</span></span><br><span class="line">    <span class="attr">MaxAutoRetriesNextServer:</span> <span class="number">1</span> <span class="comment"># 切换实例的重试次数</span></span><br><span class="line">    <span class="attr">MaxAutoRetries:</span> <span class="number">1</span> <span class="comment"># 对当前实例的重试次数</span></span><br></pre></td></tr></table></figure>

<h2 id="zuul-的过滤器实现"><a href="#zuul-的过滤器实现" class="headerlink" title="zuul 的过滤器实现"></a><strong>zuul 的过滤器实现</strong></h2><ul>
<li><code>shouldFilter</code>：返回一个<code>Boolean</code>值，判断该过滤器是否需要执行。返回true执行，返回false不执行。</li>
<li><code>run</code>：过滤器的具体业务逻辑。</li>
<li><code>filterType</code>：返回字符串，代表过滤器的类型。包含以下4种：<ul>
<li><code>pre</code>：请求在被路由之前执行</li>
<li><code>routing</code>：在路由请求时调用</li>
<li><code>post</code>：在routing和errror过滤器之后调用</li>
<li><code>error</code>：处理请求时发生错误调用</li>
</ul>
</li>
<li><code>filterOrder</code>：通过返回的int值来定义过滤器的执行顺序，数字越小优先级越高。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFilter</span> <span class="keyword">extends</span> <span class="title">ZuulFilter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">filterType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 登录校验，肯定是在前置拦截</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"pre"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">filterOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 顺序设置为1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 返回true，代表过滤器生效。</span></span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> ZuulException </span>&#123;</span><br><span class="line">        <span class="comment">// 登录校验逻辑。</span></span><br><span class="line">        <span class="comment">// 1）获取Zuul提供的请求上下文对象</span></span><br><span class="line">        RequestContext ctx = RequestContext.getCurrentContext();</span><br><span class="line">        <span class="comment">// 2) 从上下文中获取request对象</span></span><br><span class="line">        HttpServletRequest req = ctx.getRequest();</span><br><span class="line">        <span class="comment">// 3) 从请求中获取token</span></span><br><span class="line">        String token = req.getParameter(<span class="string">"access-token"</span>);</span><br><span class="line">        <span class="comment">// 4) 判断</span></span><br><span class="line">        <span class="keyword">if</span>(token == <span class="keyword">null</span> || <span class="string">""</span>.equals(token.trim()))&#123;</span><br><span class="line">            <span class="comment">// 没有token，登录校验失败，拦截</span></span><br><span class="line">            ctx.setSendZuulResponse(<span class="keyword">false</span>);</span><br><span class="line">            ctx.setResponseBody(<span class="string">"没有权限"</span>);</span><br><span class="line">            <span class="comment">// 返回401状态码。也可以考虑重定向到登录页。</span></span><br><span class="line">            ctx.setResponseStatusCode(HttpStatus.UNAUTHORIZED.value());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验通过，可以考虑把用户信息放入上下文，继续向后执行</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="zuul-的熔断器实现"><a href="#zuul-的熔断器实现" class="headerlink" title="zuul 的熔断器实现"></a>zuul 的熔断器实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceFallbackProvider</span> <span class="keyword">implements</span> <span class="title">FallbackProvider</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRoute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 表明是为哪个微服务提供回退，*表示为所有微服务提供回退</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"*"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ClientHttpResponse <span class="title">fallbackResponse</span><span class="params">(String route, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.response(HttpStatus.INTERNAL_SERVER_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ClientHttpResponse <span class="title">response</span><span class="params">(<span class="keyword">final</span> HttpStatus status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ClientHttpResponse() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> HttpStatus <span class="title">getStatusCode</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> status;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRawStatusCode</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> status.value();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">getStatusText</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> status.getReasonPhrase();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> InputStream <span class="title">getBody</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> ByteArrayInputStream(<span class="string">"服务不可用，请稍后再试。"</span>.getBytes());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> HttpHeaders <span class="title">getHeaders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// headers设定</span></span><br><span class="line">                HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">                MediaType mt = <span class="keyword">new</span> MediaType(<span class="string">"application"</span>, <span class="string">"json"</span>, Charset.forName(<span class="string">"GBK"</span>));</span><br><span class="line">                headers.setContentType(mt);</span><br><span class="line">                <span class="keyword">return</span> headers;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="附：齐全的服务提供者pom"><a href="#附：齐全的服务提供者pom" class="headerlink" title="附：齐全的服务提供者pom"></a>附：齐全的服务提供者pom</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入SSM整合SpringBoot jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mybatis.starter.version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">mybatis.starter.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mapper.starter.version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">mapper.starter.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pageHelper.starter.version</span>&gt;</span>1.2.5<span class="tag">&lt;/<span class="name">pageHelper.starter.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">durid.starter.version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">durid.starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!-- eureka客户端启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!-- web启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 单元测试启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!-- jdbc启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mybatis启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 通用Mapper启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mapper.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 分页助手启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pageHelper.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mysql驱动 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Druid连接池 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;durid.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- httpclient --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- lombok  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>spring-cloud-Netflix</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>redis+spring-data-redis 的简单使用</title>
    <url>/2019/11/21/redis-spring-data-redis-%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="一、为什么使用"><a href="#一、为什么使用" class="headerlink" title="一、为什么使用"></a>一、为什么使用</h3><ol>
<li>解决应用服务器的cpu和内存压力</li>
<li>减少io的读操作，减轻io的压力</li>
<li>关系型数据库的扩展性不强，难以改变表结构</li>
</ol><h3 id="二、优点："><a href="#二、优点：" class="headerlink" title="二、优点："></a>二、优点：</h3><ol>
<li>nosql数据库没有关联关系，数据结构简单，拓展表比较容易</li>
<li>nosql读取速度快，对较大数据处理快</li>
</ol><h3 id="三、适用场景："><a href="#三、适用场景：" class="headerlink" title="三、适用场景："></a><strong>三、适用场景：</strong></h3><ol>
<li>数据高并发的读写</li>
<li>海量数据的读写</li>
<li>对扩展性要求高的数据</li>
</ol><a id="more"></a>


<h3 id="四、不适场景："><a href="#四、不适场景：" class="headerlink" title="四、不适场景："></a>四、不适场景：</h3><ol>
<li>需要事务支持（非关系型数据库）</li>
<li>基于sql结构化查询储存，关系复杂</li>
</ol>
<h3 id="五、Spring-Data-Redis"><a href="#五、Spring-Data-Redis" class="headerlink" title="五、Spring Data Redis"></a>五、Spring Data Redis</h3><p> Spring-data-redis是spring大家族的一部分，提供了在srping应用中通过简单的配置访问redis服务，对reids底层开发包(Jedis, JRedis, and RJC)进行了高度封装，RedisTemplate提供了redis各种操作、异常处理及序列化，支持发布订阅，并对spring 3.1 cache进行了实现。</p>
<p> spring-data-redis针对jedis提供了如下功能：</p>
<p>连接池自动管理，提供了一个高度封装的“RedisTemplate”类</p>
<p>针对jedis客户端中大量api进行了归类封装,将同一类型操作封装为operation接口</p>
<p>ValueOperations：简单K-V操作</p>
<p>SetOperations：set类型数据操作</p>
<p>ZSetOperations：zset类型数据操作</p>
<p>HashOperations：针对map类型的数据操作</p>
<p>ListOperations：针对list类型的数据操作</p>
<h3 id="六、开始使用"><a href="#六、开始使用" class="headerlink" title="六、开始使用"></a>六、开始使用</h3><ol>
<li><p>创建一个spring-boot项目</p>
</li>
<li><p>加入pom文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.dszmr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 引入SSM整合SpringBoot jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mybatis.starter.version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">mybatis.starter.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mapper.starter.version</span>&gt;</span>2.0.2<span class="tag">&lt;/<span class="name">mapper.starter.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pageHelper.starter.version</span>&gt;</span>1.2.5<span class="tag">&lt;/<span class="name">pageHelper.starter.version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">durid.starter.version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">durid.starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mybatis启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 分页助手 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pageHelper.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mysql驱动 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Druid连接池 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;durid.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 测试启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- pool连接池 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- jedis --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- spring-boot-redis 启动器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>application.yml配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/test1</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">  <span class="attr">redis:</span>  <span class="comment">###### redis 配置</span></span><br><span class="line">    <span class="attr">hostName:</span> <span class="number">106.54</span><span class="string">.*.***</span> <span class="comment"># ip地址</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span>  <span class="comment"># 端口号</span></span><br><span class="line">    <span class="attr">password:</span> <span class="comment"># 无密码不填</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">30000</span>  <span class="comment"># 连接超时时间 （默认1天）</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">shutdown-timeout:</span> <span class="number">100</span> <span class="comment"># 关闭超时时间 默认 100ms</span></span><br><span class="line">      <span class="attr">pool:</span> <span class="comment"># lettuce 连接池</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span> <span class="comment"># 连接池最大连接数 默认 8（-1 ：表示没有限制）</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">60000</span> <span class="comment"># 连接池最大阻塞等待时间 默认-1ms （-1 :表示没有限制） 这里设置1分钟</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span> <span class="comment"># 最大空闲连接  默认 8</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span> <span class="comment"># 最小空闲连接  默认 0</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Redis配置类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.jedis.JedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 完成对Redis的整合的一些配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 1.创建JedisPoolConfig对象。在该对象中完成一些链接池配置</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@ConfigurationProperties</span>:会将前缀相同的内容创建一个实体。</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"spring.redis.pool"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JedisPoolConfig <span class="title">jedisPoolConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">		JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">		<span class="comment">/*//最大空闲数</span></span><br><span class="line"><span class="comment">		config.setMaxIdle(10);</span></span><br><span class="line"><span class="comment">		//最小空闲数</span></span><br><span class="line"><span class="comment">		config.setMinIdle(5);</span></span><br><span class="line"><span class="comment">		//最大链接数</span></span><br><span class="line"><span class="comment">		config.setMaxTotal(20);*/</span></span><br><span class="line">		System.out.println(<span class="string">"默认值："</span>+config.getMaxIdle());</span><br><span class="line">		System.out.println(<span class="string">"默认值："</span>+config.getMinIdle());</span><br><span class="line">		System.out.println(<span class="string">"默认值："</span>+config.getMaxTotal());</span><br><span class="line">		<span class="keyword">return</span> config;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 2.创建JedisConnectionFactory：配置redis链接信息</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"spring.redis"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> JedisConnectionFactory <span class="title">jedisConnectionFactory</span><span class="params">(JedisPoolConfig config)</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"配置完毕："</span>+config.getMaxIdle());</span><br><span class="line">		System.out.println(<span class="string">"配置完毕："</span>+config.getMinIdle());</span><br><span class="line">		System.out.println(<span class="string">"配置完毕："</span>+config.getMaxTotal());</span><br><span class="line"></span><br><span class="line">		JedisConnectionFactory factory = <span class="keyword">new</span> JedisConnectionFactory();</span><br><span class="line">		<span class="comment">//关联链接池的配置对象</span></span><br><span class="line">		factory.setPoolConfig(config);</span><br><span class="line">		<span class="comment">//配置链接Redis的信息</span></span><br><span class="line">		<span class="comment">//主机地址</span></span><br><span class="line">		<span class="comment">/*factory.setHostName("192.168.70.128");</span></span><br><span class="line"><span class="comment">		//端口</span></span><br><span class="line"><span class="comment">		factory.setPort(6379);*/</span></span><br><span class="line">		<span class="keyword">return</span> factory;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 3.创建RedisTemplate:用于执行Redis操作的方法</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> RedisTemplate&lt;String,Object&gt; <span class="title">redisTemplate</span><span class="params">(JedisConnectionFactory factory)</span></span>&#123;</span><br><span class="line">		RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">		<span class="comment">//关联</span></span><br><span class="line">		template.setConnectionFactory(factory);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//为key设置序列化器</span></span><br><span class="line">		template.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">		<span class="comment">//为value设置序列化器</span></span><br><span class="line">		template.setValueSerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> template;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.dszmr.model.Users;</span><br><span class="line"><span class="keyword">import</span> org.assertj.core.util.Lists;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.JdkSerializationRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span>(<span class="title">classes</span> </span>= SpringDataRedisApplication<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringbootRedisDemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">"key"</span>, <span class="string">"bobokaoya..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取一个字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String value = (String)<span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">"key"</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加Users对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSetUesrs</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Users users = <span class="keyword">new</span> Users();</span><br><span class="line">        users.setAge(<span class="number">20</span>);</span><br><span class="line">        users.setName(<span class="string">"张三丰"</span>);</span><br><span class="line">        users.setId(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//重新设置序列化器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.setValueSerializer(<span class="keyword">new</span> JdkSerializationRedisSerializer());</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">"users"</span>, users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取Users对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetUsers</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//重新设置序列化器</span></span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.setValueSerializer(<span class="keyword">new</span> JdkSerializationRedisSerializer());</span><br><span class="line">        Users users = (Users)<span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">"users"</span>);</span><br><span class="line">        System.out.println(users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于JSON格式存Users对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSetUsersUseJSON</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Users users = <span class="keyword">new</span> Users();</span><br><span class="line">        users.setAge(<span class="number">20</span>);</span><br><span class="line">        users.setName(<span class="string">"李四丰"</span>);</span><br><span class="line">        users.setId(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.setValueSerializer(<span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;&gt;(Users<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForValue().set(<span class="string">"users_json"</span>, users);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于JSON格式取Users对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetUseJSON</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.setValueSerializer(<span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;&gt;(Users<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        Users users = (Users)<span class="keyword">this</span>.redisTemplate.opsForValue().get(<span class="string">"users_json"</span>);</span><br><span class="line">        System.out.println(users);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testsetlist</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (redisTemplate.opsForList().size(<span class="string">"dsz"</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            redisTemplate.opsForList().leftPop(<span class="string">"dsz"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ArrayList&lt;String&gt; list = Lists.newArrayList();</span><br><span class="line">        list.add(<span class="string">"1"</span>);</span><br><span class="line">        list.add(<span class="string">"2"</span>);</span><br><span class="line">        list.add(<span class="string">"3"</span>);</span><br><span class="line">        list.add(<span class="string">"4"</span>);</span><br><span class="line">        list.add(<span class="string">"5"</span>);</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate.opsForList().rightPushAll(<span class="string">"dsz"</span>,list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testgetlist</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Object&gt; dsz = <span class="keyword">this</span>.redisTemplate.opsForList().range(<span class="string">"dsz"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">        dsz.forEach(s -&gt;&#123;</span><br><span class="line">            String s1 = String.valueOf(s);</span><br><span class="line">            System.out.println(s1);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
]]></content>
      <categories>
        <category>主流框架</category>
      </categories>
      <tags>
        <tag>spring全家桶</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>mybatis-plus 使用</title>
    <url>/2019/11/21/mybatis-plus-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>​                MyBatisPlus是一个Mybatis的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。它主要通过启动时自动注入基本CURD，达到简化操作的目的。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li>pom依赖</li>
</ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0-beta<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- mybatis-plus begin --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0-beta<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- mybatis-plus end --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Spring Boot Mybatis 依赖 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a>



<ul>
<li>application.yml配置文件</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">   <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/test1</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"><span class="comment"># 可省略，SpringBoot自动推断</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment">#外部化xml配置</span></span><br><span class="line">  <span class="comment">#config-location: classpath:mybatis-config.xml</span></span><br><span class="line">  <span class="comment">#指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署</span></span><br><span class="line">  <span class="comment">#configuration-properties: classpath:mybatis/config.properties</span></span><br><span class="line">  <span class="comment">#xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath*:/mapper/*.xml</span></span><br><span class="line">  <span class="comment">#MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">net.xinhuamm.noah.api.model.entity,net.xinhuamm.noah.api.model.dto</span></span><br><span class="line">  <span class="comment">#如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象</span></span><br><span class="line">  <span class="comment">#type-aliases-super-type: java.lang.Object</span></span><br><span class="line">  <span class="comment">#枚举类 扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性</span></span><br><span class="line">  <span class="comment">#type-enums-package: com.baomidou.mybatisplus.samples.quickstart.enums</span></span><br><span class="line">  <span class="comment">#项目启动会检查xml配置存在(只在开发时候打开)</span></span><br><span class="line">  <span class="attr">check-config-location:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#SIMPLE：该执行器类型不做特殊的事情，为每个语句的执行创建一个新的预处理语句,REUSE：该执行器类型会复用预处理语句,BATCH：该执行器类型会批量执行所有的更新语句</span></span><br><span class="line">  <span class="attr">default-executor-type:</span> <span class="string">REUSE</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true</span></span><br><span class="line">    <span class="attr">cache-enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">#懒加载</span></span><br><span class="line">    <span class="comment">#aggressive-lazy-loading: true</span></span><br><span class="line">    <span class="comment">#NONE：不启用自动映射 PARTIAL：只对非嵌套的 resultMap 进行自动映射 FULL：对所有的 resultMap 都进行自动映射</span></span><br><span class="line">    <span class="comment">#auto-mapping-behavior: partial</span></span><br><span class="line">    <span class="comment">#NONE：不做任何处理 (默认值)WARNING：以日志的形式打印相关警告信息 FAILING：当作映射失败处理，并抛出异常和详细信息</span></span><br><span class="line">    <span class="comment">#auto-mapping-unknown-column-behavior: none</span></span><br><span class="line">    <span class="comment">#如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段</span></span><br><span class="line">    <span class="attr">call-setters-on-nulls:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 这个配置会将执行的sql打印出来，在开发或测试的时候可以用</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment">#表名下划线命名默认true</span></span><br><span class="line">      <span class="attr">table-underline:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">#id类型</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="comment">#是否开启大写命名，默认不开启</span></span><br><span class="line">      <span class="comment">#capital-mode: false</span></span><br><span class="line">      <span class="comment">#逻辑已删除值,(逻辑删除下有效) 需要注入逻辑策略LogicSqlInjector 以@Bean方式注入</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br><span class="line">      <span class="comment">#逻辑未删除值,(逻辑删除下有效)</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="comment">#数据库类型</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">sql_server</span></span><br></pre></td></tr></table></figure>

<h3 id="简单CRUD"><a href="#简单CRUD" class="headerlink" title="简单CRUD"></a>简单CRUD</h3><ul>
<li>增加</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	</span><br><span class="line">User u  = <span class="keyword">new</span> User();</span><br><span class="line">      u.setUsername(<span class="string">"Dsz"</span>);</span><br><span class="line">      u.setPassword(<span class="string">"1111"</span>);</span><br><span class="line">      service.insert(u);</span><br></pre></td></tr></table></figure>

<ul>
<li>删除</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过id删除</span></span><br><span class="line">service.deleteById(u.getUid());</span><br><span class="line"><span class="comment">//条件删除</span></span><br><span class="line">service.delete(<span class="keyword">new</span> QueryWrapper&lt;User&gt;().eq(<span class="string">"username"</span>,u.getUsername()));</span><br></pre></td></tr></table></figure>

<ul>
<li>更新</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过id更新</span></span><br><span class="line">service.updateById(u);</span><br><span class="line"><span class="comment">//通过条件更新</span></span><br><span class="line">service.update(u,<span class="keyword">new</span> QueryWrapper&lt;&gt;());</span><br><span class="line"><span class="comment">//更新 如果不存在则插入</span></span><br><span class="line">service.insertOrUpdate(u);</span><br></pre></td></tr></table></figure>

<ul>
<li>查询</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//条件查询单个</span></span><br><span class="line">service.selectOne(<span class="keyword">new</span> QueryWrapper&lt;&gt;());</span><br><span class="line"><span class="comment">//条件查询多个</span></span><br><span class="line">service.selectList(<span class="keyword">new</span> QueryWrapper&lt;&gt;());</span><br><span class="line"><span class="comment">//通过id查询</span></span><br><span class="line">service.selectById(u.getUid());</span><br><span class="line"><span class="comment">//查询有多少条记录</span></span><br><span class="line">service.selectCount(<span class="keyword">new</span> QueryWrapper&lt;&gt;());</span><br></pre></td></tr></table></figure>



<h3 id="附：条件参数说明"><a href="#附：条件参数说明" class="headerlink" title="附：条件参数说明"></a>附：条件参数说明</h3><p>查询方式            说明<br>setSqlSelect    设置 SELECT 查询字段<br>where    WHERE 语句，拼接 + WHERE 条件<br>and    AND 语句，拼接 + AND 字段=值<br>andNew    AND 语句，拼接 + AND (字段=值)<br>or    OR 语句，拼接 + OR 字段=值<br>orNew    OR 语句，拼接 + OR (字段=值)<br>eq    等于=<br>allEq    基于 map 内容等于=<br>ne    不等于&lt;&gt;<br>gt    大于&gt;<br>ge    大于等于&gt;=<br>lt    小于&lt;<br>le    小于等于&lt;=<br>like    模糊查询 LIKE<br>notLike    模糊查询 NOT LIKE<br>in    IN 查询<br>notIn    NOT IN 查询<br>isNull    NULL 值查询<br>isNotNull    IS NOT NULL<br>groupBy    分组 GROUP BY<br>having    HAVING 关键词<br>orderBy    排序 ORDER BY<br>orderAsc    ASC 排序 ORDER BY<br>orderDesc    DESC 排序 ORDER BY<br>exists    EXISTS 条件语句<br>notExists    NOT EXISTS 条件语句<br>between    BETWEEN 条件语句<br>notBetween    NOT BETWEEN 条件语句<br>addFilter    自由拼接 SQL<br>last    拼接在最后，例如：last(“LIMIT 1”)</p>
]]></content>
      <categories>
        <category>主流框架</category>
      </categories>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring security oAth2-实战(3)</title>
    <url>/2019/11/20/Spring-security-oAth2-%E5%AE%9E%E6%88%98-3/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在 <strong>为什么需要 oAuth2</strong> 和 <strong>RBAC 基于角色的权限控制</strong> 章节，我们介绍过资源的概念，简单点说就是需要被访问的业务数据或是静态资源文件都可以被称作资源。</p><p>为了让大家更好的理解资源服务器的概念，我们单独创建一个名为 <code>spring-security-oauth2-resource</code> 资源服务器的项目，该项目的主要目的就是对数据表的 CRUD 操作，而这些操作就是对资源的操作了。</p><a id="more"></a>

<p><strong>操作流程</strong></p>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/901ef32a4fa6cad.png" alt="img"></p>
<ul>
<li>初始化资源服务器数据库</li>
<li>POM 所需依赖同认证服务器</li>
<li>配置资源服务器</li>
<li>配置资源(Controller)</li>
</ul>
<h2 id="初始化资源服务器数据库"><a href="#初始化资源服务器数据库" class="headerlink" title="初始化资源服务器数据库"></a>初始化资源服务器数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_content`</span> (  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,  <span class="string">`category_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'内容类目ID'</span>,  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'内容标题'</span>,  <span class="string">`sub_title`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'子标题'</span>,  <span class="string">`title_desc`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'标题描述'</span>,  <span class="string">`url`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'链接'</span>,  <span class="string">`pic`</span> <span class="built_in">varchar</span>(<span class="number">300</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'图片绝对路径'</span>,  <span class="string">`pic2`</span> <span class="built_in">varchar</span>(<span class="number">300</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'图片2'</span>,  <span class="string">`content`</span> <span class="built_in">text</span> <span class="keyword">COMMENT</span> <span class="string">'内容'</span>,  <span class="string">`created`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`updated`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),  <span class="keyword">KEY</span> <span class="string">`category_id`</span> (<span class="string">`category_id`</span>),  <span class="keyword">KEY</span> <span class="string">`updated`</span> (<span class="string">`updated`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">42</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_content`</span>(<span class="string">`id`</span>,<span class="string">`category_id`</span>,<span class="string">`title`</span>,<span class="string">`sub_title`</span>,<span class="string">`title_desc`</span>,<span class="string">`url`</span>,<span class="string">`pic`</span>,<span class="string">`pic2`</span>,<span class="string">`content`</span>,<span class="string">`created`</span>,<span class="string">`updated`</span>) <span class="keyword">values</span> (<span class="number">28</span>,<span class="number">89</span>,<span class="string">'标题'</span>,<span class="string">'子标题'</span>,<span class="string">'标题说明'</span>,<span class="string">'http://www.jd.com'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-07 00:56:09'</span>,<span class="string">'2019-04-07 00:56:11'</span>),(<span class="number">29</span>,<span class="number">89</span>,<span class="string">'ad2'</span>,<span class="string">'ad2'</span>,<span class="string">'ad2'</span>,<span class="string">'http://www.baidu.com'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-07 00:56:13'</span>,<span class="string">'2019-04-07 00:56:15'</span>),(<span class="number">30</span>,<span class="number">89</span>,<span class="string">'ad3'</span>,<span class="string">'ad3'</span>,<span class="string">'ad3'</span>,<span class="string">'http://www.sina.com.cn'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-07 00:56:17'</span>,<span class="string">'2019-04-07 00:56:19'</span>),(<span class="number">31</span>,<span class="number">89</span>,<span class="string">'ad4'</span>,<span class="string">'ad4'</span>,<span class="string">'ad4'</span>,<span class="string">'http://www.funtl.com'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-07 00:56:22'</span>,<span class="string">'2019-04-07 00:56:25'</span>);<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_content_category`</span> (  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'类目ID'</span>,  <span class="string">`parent_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'父类目ID=0时，代表的是一级的类目'</span>,  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'分类名称'</span>,  <span class="string">`status`</span> <span class="built_in">int</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'状态。可选值:1(正常),2(删除)'</span>,  <span class="string">`sort_order`</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数'</span>,  <span class="string">`is_parent`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'该类目是否为父类目，1为true，0为false'</span>,  <span class="string">`created`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,  <span class="string">`updated`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),  <span class="keyword">KEY</span> <span class="string">`parent_id`</span> (<span class="string">`parent_id`</span>,<span class="string">`status`</span>) <span class="keyword">USING</span> BTREE,  <span class="keyword">KEY</span> <span class="string">`sort_order`</span> (<span class="string">`sort_order`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">98</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'内容分类'</span>;<span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_content_category`</span>(<span class="string">`id`</span>,<span class="string">`parent_id`</span>,<span class="string">`name`</span>,<span class="string">`status`</span>,<span class="string">`sort_order`</span>,<span class="string">`is_parent`</span>,<span class="string">`created`</span>,<span class="string">`updated`</span>) <span class="keyword">values</span> (<span class="number">30</span>,<span class="number">0</span>,<span class="string">'LeeShop'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">'2015-04-03 16:51:38'</span>,<span class="string">'2015-04-03 16:51:40'</span>),(<span class="number">86</span>,<span class="number">30</span>,<span class="string">'首页'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">'2015-06-07 15:36:07'</span>,<span class="string">'2015-06-07 15:36:07'</span>),(<span class="number">87</span>,<span class="number">30</span>,<span class="string">'列表页面'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">'2015-06-07 15:36:16'</span>,<span class="string">'2015-06-07 15:36:16'</span>),(<span class="number">88</span>,<span class="number">30</span>,<span class="string">'详细页面'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">'2015-06-07 15:36:27'</span>,<span class="string">'2015-06-07 15:36:27'</span>),(<span class="number">89</span>,<span class="number">86</span>,<span class="string">'大广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:36:38'</span>,<span class="string">'2015-06-07 15:36:38'</span>),(<span class="number">90</span>,<span class="number">86</span>,<span class="string">'小广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:36:45'</span>,<span class="string">'2015-06-07 15:36:45'</span>),(<span class="number">91</span>,<span class="number">86</span>,<span class="string">'商城快报'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:36:55'</span>,<span class="string">'2015-06-07 15:36:55'</span>),(<span class="number">92</span>,<span class="number">87</span>,<span class="string">'边栏广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:37:07'</span>,<span class="string">'2015-06-07 15:37:07'</span>),(<span class="number">93</span>,<span class="number">87</span>,<span class="string">'页头广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:37:17'</span>,<span class="string">'2015-06-07 15:37:17'</span>),(<span class="number">94</span>,<span class="number">87</span>,<span class="string">'页脚广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:37:31'</span>,<span class="string">'2015-06-07 15:37:31'</span>),(<span class="number">95</span>,<span class="number">88</span>,<span class="string">'边栏广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-06-07 15:37:56'</span>,<span class="string">'2015-06-07 15:37:56'</span>),(<span class="number">96</span>,<span class="number">86</span>,<span class="string">'中广告'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">'2015-07-25 18:58:52'</span>,<span class="string">'2015-07-25 18:58:52'</span>),(<span class="number">97</span>,<span class="number">96</span>,<span class="string">'中广告1'</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2015-07-25 18:59:43'</span>,<span class="string">'2015-07-25 18:59:43'</span>);</span><br></pre></td></tr></table></figure>

<h4 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.dszmr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2-resource<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Security --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-oauth2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- CP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zaxxer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HikariCP<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hikaricp.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 排除 tomcat-jdbc 以使用 HikariCP --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">oauth2-resource</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span>  <span class="string">jdbc:mysql://localhost:3306/oath2?serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">600000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">auto-commit:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">MyHikariCP</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">1800000</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">30000</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="attr">oauth2:</span></span><br><span class="line">    <span class="attr">client:</span></span><br><span class="line">      <span class="attr">client-id:</span> <span class="string">client</span></span><br><span class="line">      <span class="attr">client-secret:</span> <span class="string">secret</span></span><br><span class="line">      <span class="attr">access-token-uri:</span> <span class="string">http://localhost:8080/oauth/token</span></span><br><span class="line">      <span class="attr">user-authorization-uri:</span> <span class="string">http://localhost:8080/oauth/authorize</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="attr">token-info-uri:</span> <span class="string">http://localhost:8080/oauth/check_token</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/contents</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">root:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="attr">org.springframework.web:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="attr">org.springframework.security:</span> <span class="string">INFO</span></span><br><span class="line">    <span class="attr">org.springframework.security.oauth2:</span> <span class="string">INFO</span></span><br></pre></td></tr></table></figure>

<h3 id="配置资源服务器"><a href="#配置资源服务器" class="headerlink" title="配置资源服务器"></a>配置资源服务器</h3><p>创建一个类继承 <code>ResourceServerConfigurerAdapter</code> 并添加相关注解：</p>
<ul>
<li><code>@Configuration</code></li>
<li><code>@EnableResourceServer</code>：资源服务器</li>
<li><code>@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true, jsr250Enabled = true)</code>：全局方法拦截</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.dszmr.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line">import org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line">import org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;</span><br><span class="line">@Configuration</span><br><span class="line">@EnableResourceServer</span><br><span class="line">@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true, jsr250Enabled = true)</span><br><span class="line">public class ResourceServerConfiguration extends ResourceServerConfigurerAdapter &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">        http</span><br><span class="line">                .exceptionHandling()</span><br><span class="line">                .and()</span><br><span class="line">                // Session 创建策略</span><br><span class="line">                // ALWAYS 总是创建 HttpSession</span><br><span class="line">                // IF_REQUIRED Spring Security 只会在需要时创建一个 HttpSession</span><br><span class="line">                // NEVER Spring Security 不会创建 HttpSession，但如果它已经存在，将可以使用 HttpSession</span><br><span class="line">                // STATELESS Spring Security 永远不会创建 HttpSession，它不会使用 HttpSession 来获取 SecurityContext</span><br><span class="line">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class="line">                .and()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                // 以下为配置所需保护的资源路径及权限，需要与认证服务器配置的授权部分对应</span><br><span class="line">                .antMatchers(&quot;/contents/**&quot;).hasAuthority(&quot;SystemContent&quot;)</span><br><span class="line">                .antMatchers(&quot;/view/**&quot;).hasAuthority(&quot;SystemContentView&quot;)</span><br><span class="line">                .antMatchers(&quot;/insert/**&quot;).hasAuthority(&quot;SystemContentInsert&quot;)</span><br><span class="line">                .antMatchers(&quot;/update/**&quot;).hasAuthority(&quot;SystemContentUpdate&quot;)</span><br><span class="line">                .antMatchers(&quot;/delete/**&quot;).hasAuthority(&quot;SystemContentDelete&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="数据传输对象"><a href="#数据传输对象" class="headerlink" title="数据传输对象"></a>数据传输对象</h3><p>创建一个名为 <code>ResponseResult</code> 的通用数据传输对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用的返回对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseResult</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">3468352004150968551L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer state;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseResult</span><span class="params">(Integer state)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseResult</span><span class="params">(Integer state, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseResult</span><span class="params">(Integer state, Throwable throwable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">        <span class="keyword">this</span>.message = throwable.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseResult</span><span class="params">(Integer state, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResponseResult</span><span class="params">(Integer state, String message, T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> state;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setState</span><span class="params">(Integer state)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> prime = <span class="number">31</span>;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">        result = prime * result + ((data == <span class="keyword">null</span>) ? <span class="number">0</span> : data.hashCode());</span><br><span class="line">        result = prime * result + ((message == <span class="keyword">null</span>) ? <span class="number">0</span> : message.hashCode());</span><br><span class="line">        result = prime * result + ((state == <span class="keyword">null</span>) ? <span class="number">0</span> : state.hashCode());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == obj) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (getClass() != obj.getClass()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ResponseResult&lt;?&gt; other = (ResponseResult&lt;?&gt;) obj;</span><br><span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.data != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!data.equals(other.data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.message != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!message.equals(other.message)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (state == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.state != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!state.equals(other.state)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.dszmr.domain.TbContent;</span><br><span class="line"><span class="keyword">import</span> cn.dszmr.service.TbContentService;</span><br><span class="line"><span class="keyword">import</span> cn.dszmr.vo.ResponseResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TbContentController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TbContentService tbContentService;</span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/"</span>)</span><br><span class="line">    <span class="keyword">public</span> ResponseResult&lt;List&lt;TbContent&gt;&gt; list() &#123;</span><br><span class="line">        List&lt;TbContent&gt; tbContents = tbContentService.selectAll();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseResult&lt;List&lt;TbContent&gt;&gt;(HttpStatus.OK.value(), HttpStatus.OK.toString(), tbContents);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="访问资源"><a href="#访问资源" class="headerlink" title="访问资源"></a>访问资源</h2><h3 id="访问获取授权码"><a href="#访问获取授权码" class="headerlink" title="访问获取授权码"></a>访问获取授权码</h3><ul>
<li>通过浏览器访问</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/oauth/authorize?client_id=client&amp;response_type=code</span><br></pre></td></tr></table></figure>

<ul>
<li>第一次访问会跳转到登录页面</li>
</ul>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/81b26cd8f499725-3.png" alt="img"></p>
<ul>
<li>验证成功后会询问用户是否授权客户端</li>
</ul>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/6d93fe9ca240195-3.png" alt="img"></p>
<ul>
<li>选择授权后会跳转到百度，浏览器地址上还会包含一个授权码（<code>code=1JuO6V</code>），浏览器地址栏会显示如下地址：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://www.baidu.com/?code=1JuO6V</span><br></pre></td></tr></table></figure>

<h3 id="向服务器申请令牌"><a href="#向服务器申请令牌" class="headerlink" title="向服务器申请令牌"></a>向服务器申请令牌</h3><ul>
<li>通过 CURL 或是 Postman 请求</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -X POST -H &quot;Content-Type: application/x-www-form-urlencoded&quot; -d &apos;grant_type=authorization_code&amp;code=1JuO6V&apos; &quot;http://client:secret@localhost:8080/oauth/token&quot;</span><br></pre></td></tr></table></figure>

<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/1dc1ad17978e97d-3.png" alt="img"></p>
<ul>
<li>得到响应结果如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;    &quot;access_token&quot;: &quot;016d8d4a-dd6e-4493-b590-5f072923c413&quot;,    &quot;token_type&quot;: &quot;bearer&quot;,    &quot;expires_in&quot;: 43199,    &quot;scope&quot;: &quot;app&quot;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="携带令牌访问资源服务器"><a href="#携带令牌访问资源服务器" class="headerlink" title="携带令牌访问资源服务器"></a>携带令牌访问资源服务器</h3><p>此处以获取全部资源为例，其它请求方式一样，可以参考我源码中的单元测试代码。可以使用以下方式请求：</p>
<ul>
<li>使用 Headers 方式：需要在请求头增加 <code>Authorization: Bearer yourAccessToken</code></li>
<li>直接请求带参数方式：<code>http://localhost:8081/contents?access_token=yourAccessToken</code></li>
</ul>
<p>使用 Headers 方式，通过 CURL 或是 Postman 请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl --location --request GET &quot;http://localhost:8081/contents&quot; --header &quot;Content-Type: application/json&quot; --header &quot;Authorization: Bearer yourAccessToken&quot;</span><br></pre></td></tr></table></figure>

<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/c50de6809490e5a.png" alt="img"></p>
]]></content>
      <categories>
        <category>主流框架</category>
      </categories>
      <tags>
        <tag>安全框架</tag>
        <tag>spring全家桶</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring security oAth2(2)</title>
    <url>/2019/11/20/Spring-security-oAth2-2/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本章节 <strong>基于 JDBC 存储令牌</strong> 的模式用于演示最基本的操作，帮助大家快速理解 oAuth2 认证服务器中 “认证”、”授权”、”访问令牌” 的基本概念</p><h3 id="对于上篇文章需要修改的点"><a href="#对于上篇文章需要修改的点" class="headerlink" title="对于上篇文章需要修改的点"></a>对于上篇文章需要修改的点</h3><ul>
<li><p>初始化 oAuth2 相关表</p>
</li>
<li><p>在数据库中配置客户端</p>
</li>
<li><p>配置认证服务器</p>
<ul>
<li><p>配置数据源：<code>DataSource</code></p>
</li>
<li><p>配置令牌存储方式：<code>TokenStore</code> -&gt; <code>JdbcTokenStore</code></p>
</li>
<li><p>配置客户端读取方式：<code>ClientDetailsService</code> -&gt; <code>JdbcClientDetailsService</code></p>
</li>
<li><p>配置服务端点信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AuthorizationServerEndpointsConfigurer</span><br></pre></td></tr></table></figure>

<ul>
<li><code>tokenStore</code>：设置令牌存储方式</li>
</ul>
</li>
<li><p>配置客户端信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ClientDetailsServiceConfigurer</span><br></pre></td></tr></table></figure>

<ul>
<li><code>withClientDetails</code>：设置客户端配置读取方式</li>
</ul>
</li>
</ul>
</li>
</ul><a id="more"></a>

<h2 id="初始化-oAuth2-相关表"><a href="#初始化-oAuth2-相关表" class="headerlink" title="初始化 oAuth2 相关表"></a>初始化 oAuth2 相关表</h2><p>使用官方提供的建表脚本初始化 oAuth2 相关表，地址如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/test/resources/schema.sql</span><br></pre></td></tr></table></figure>

<p>由于我们使用的是 MySQL 数据库，默认建表语句中主键为 <code>VARCHAR(256)</code>，这超过了最大的主键长度，请手动修改为 <code>128</code>，并用 <code>BLOB</code> 替换语句中的 <code>LONGVARBINARY</code> 类型，修改后的建表脚本如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`clientdetails`</span> (  <span class="string">`appId`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,  <span class="string">`resourceIds`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`appSecret`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`scope`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`grantTypes`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`redirectUrl`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`authorities`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`access_token_validity`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`refresh_token_validity`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`additionalInformation`</span> <span class="built_in">varchar</span>(<span class="number">4096</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`autoApproveScopes`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`appId`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_access_token`</span> (  <span class="string">`token_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`token`</span> <span class="built_in">blob</span>,  <span class="string">`authentication_id`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,  <span class="string">`user_name`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`client_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`authentication`</span> <span class="built_in">blob</span>,  <span class="string">`refresh_token`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`authentication_id`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_approvals`</span> (  <span class="string">`userId`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`clientId`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`scope`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`status`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`expiresAt`</span> <span class="built_in">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`lastModifiedAt`</span> <span class="built_in">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_client_details`</span> (  <span class="string">`client_id`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,  <span class="string">`resource_ids`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`client_secret`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`scope`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`authorized_grant_types`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`web_server_redirect_uri`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`authorities`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`access_token_validity`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`refresh_token_validity`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`additional_information`</span> <span class="built_in">varchar</span>(<span class="number">4096</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`autoapprove`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`client_id`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_client_token`</span> (  <span class="string">`token_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`token`</span> <span class="built_in">blob</span>,  <span class="string">`authentication_id`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,  <span class="string">`user_name`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`client_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  PRIMARY <span class="keyword">KEY</span> (<span class="string">`authentication_id`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_code`</span> (  <span class="string">`code`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`authentication`</span> <span class="built_in">blob</span>) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;<span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`oauth_refresh_token`</span> (  <span class="string">`token_id`</span> <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,  <span class="string">`token`</span> <span class="built_in">blob</span>,  <span class="string">`authentication`</span> <span class="built_in">blob</span>) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure>

<h2 id="在数据库中配置客户端"><a href="#在数据库中配置客户端" class="headerlink" title="在数据库中配置客户端"></a>在数据库中配置客户端</h2><p>将上一篇文章中在内存对应的配置，更换到内存中进行配置，配置的字段如下：</p>
<ul>
<li><p><code>client_id</code>：客户端标识</p>
</li>
<li><p><code>client_secret</code>：客户端安全码，<strong>此处不能是明文，需要加密</strong></p>
</li>
<li><p><code>scope</code>：客户端授权范围</p>
</li>
<li><p><code>authorized_grant_types</code>：客户端授权类型</p>
</li>
<li><p><code>web_server_redirect_uri</code>：服务器回调地址</p>
<p>只是将本来存在于内存的配置移动到了数据库进行存储</p>
</li>
</ul>
<p>因为客户端安全码必须是加密文字所以必须要先进行加密然后再进行存储，编写测试方法对密码进行加密：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.dszmr.test;</span><br><span class="line"></span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line">import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line">@SpringBootTest</span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">public class Test1 &#123;</span><br><span class="line">    @Test</span><br><span class="line">    public void testBCryptPasswordEncoder() &#123;</span><br><span class="line">        System.out.println(new BCryptPasswordEncoder().encode(&quot;secret&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>数据库数据效果图</p>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/2c3e824c2e419b3.png" alt="img"></p>
<p>由于是对数据库进行操作所以需要添加数据库对应依赖</p>
<ul>
<li>pom</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zaxxer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HikariCP<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;hikaricp.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 排除 tomcat-jdbc 以使用 HikariCP --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>application.yml</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    type: com.zaxxer.hikari.HikariDataSource</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url:  jdbc:mysql://localhost:3306/ordering?serverTimezone=UTC</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    hikari:</span><br><span class="line">      minimum-idle: 5</span><br><span class="line">      idle-timeout: 600000</span><br><span class="line">      maximum-pool-size: 10</span><br><span class="line">      auto-commit: true</span><br><span class="line">      pool-name: MyHikariCP</span><br><span class="line">      max-lifetime: 1800000</span><br><span class="line">      connection-timeout: 30000</span><br><span class="line">      connection-test-query: SELECT 1</span><br><span class="line">  application:</span><br><span class="line">    name: business-oauth2</span><br><span class="line">  main:</span><br><span class="line">    allow-bean-definition-overriding: true</span><br><span class="line">  jackson:</span><br><span class="line">    time-zone: GMT+8</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 106.54.8.126:8848</span><br><span class="line"></span><br><span class="line">dubbo:</span><br><span class="line">  scan:</span><br><span class="line">    base-packages: cn.dszmr.business.myshop.controller,cn.dszmr.business.myshop.service</span><br><span class="line">  protocol:</span><br><span class="line">    name: dubbo</span><br><span class="line">    port: -1</span><br><span class="line">    serialization: kryo</span><br><span class="line">  registry:</span><br><span class="line">    address: nacos://106.54.8.126</span><br><span class="line">    port: 8848</span><br><span class="line">feign:</span><br><span class="line">  okhttp:</span><br><span class="line">    enabled: true</span><br><span class="line">  httpclient:</span><br><span class="line">    enabled: false</span><br><span class="line">server:</span><br><span class="line">  port: 9001</span><br><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &quot;*&quot;</span><br><span class="line">business:</span><br><span class="line">  oauth2:</span><br><span class="line">    grant_type: password</span><br><span class="line">    client_id: client</span><br><span class="line">    client_secret: secret</span><br></pre></td></tr></table></figure>

<ul>
<li>修改AuthorizationServerConfiguration</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package cn.dszmr.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.Primary;</span><br><span class="line">import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;</span><br><span class="line">import org.springframework.security.oauth2.provider.ClientDetailsService;</span><br><span class="line">import org.springframework.security.oauth2.provider.client.JdbcClientDetailsService;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.TokenStore;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.store.JdbcTokenStore;</span><br><span class="line"></span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableAuthorizationServer  //告诉spring 需要加载那些spring security 的类</span><br><span class="line">public class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private BCryptPasswordEncoder passwordEncoder; //注入密码模式</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    @Primary</span><br><span class="line">    @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span><br><span class="line">    public DataSource dataSource() &#123;</span><br><span class="line">        // 配置数据源（注意，我使用的是 HikariCP 连接池），以上注解是指定数据源，否则会有冲突</span><br><span class="line">        return DataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public TokenStore tokenStore() &#123;</span><br><span class="line">        // 基于 JDBC 实现，令牌保存到数据库</span><br><span class="line">        return new JdbcTokenStore(dataSource());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public ClientDetailsService jdbcClientDetailsService() &#123;</span><br><span class="line">        // 基于 JDBC 实现，需要事先在数据库配置客户端信息</span><br><span class="line">        return new JdbcClientDetailsService(dataSource());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception &#123;</span><br><span class="line">        // 设置令牌存储模式</span><br><span class="line">        endpoints.tokenStore(tokenStore());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configure(ClientDetailsServiceConfigurer clients) throws Exception &#123;</span><br><span class="line">        // 客户端配置</span><br><span class="line">        clients.withClientDetails(jdbcClientDetailsService());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="进行测试"><a href="#进行测试" class="headerlink" title="进行测试"></a>进行测试</h2><ul>
<li>通过浏览器访问</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/oauth/authorize?client_id=client&amp;response_type=code</span><br></pre></td></tr></table></figure>

<ul>
<li>第一次访问会跳转到登录页面</li>
</ul>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/81b26cd8f499725-1.png" alt="img"></p>
<ul>
<li>验证成功后会询问用户是否授权客户端</li>
</ul>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/6d93fe9ca240195-1.png" alt="img"></p>
<ul>
<li>选择授权后会跳转到百度，浏览器地址上还会包含一个授权码（<code>code=1JuO6V</code>），浏览器地址栏会显示如下地址：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://www.baidu.com/?code=1JuO6V</span><br></pre></td></tr></table></figure>

<h3 id="向服务器申请令牌"><a href="#向服务器申请令牌" class="headerlink" title="向服务器申请令牌"></a>向服务器申请令牌</h3><ul>
<li>通过 CURL 或是 Postman 请求</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -X POST -H &quot;Content-Type: application/x-www-form-urlencoded&quot; -d &apos;grant_type=authorization_code&amp;code=1JuO6V&apos; &quot;http://client:secret@localhost:8080/oauth/token&quot;</span><br></pre></td></tr></table></figure>

<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/1dc1ad17978e97d-1.png" alt="img"></p>
<ul>
<li>得到响应结果如下</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;    <span class="attr">"access_token"</span>: <span class="string">"016d8d4a-dd6e-4493-b590-5f072923c413"</span>,    <span class="attr">"token_type"</span>: <span class="string">"bearer"</span>,    <span class="attr">"expires_in"</span>: <span class="number">43199</span>,    <span class="attr">"scope"</span>: <span class="string">"app"</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="RBAC-基于角色的访问控制"><a href="#RBAC-基于角色的访问控制" class="headerlink" title="RBAC 基于角色的访问控制"></a>RBAC 基于角色的访问控制</h3><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>RBAC（Role-Based Access Control，基于角色的访问控制），就是用户通过角色与权限进行关联。简单地说，一个用户拥有若干角色，每一个角色拥有若干权限。这样，就构造成“用户-角色-权限”的授权模型。在这种模型中，用户与角色之间，角色与权限之间，一般是多对多的关系。（如下图）</p>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/e05470fa06dbe31.png" alt="img"></p>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在我们的 oAuth2 系统中，我们需要对系统的所有资源进行权限控制，系统中的资源包括：</p>
<ul>
<li>静态资源（对象资源）：功能操作、数据列</li>
<li>动态资源（数据资源）：数据</li>
</ul>
<p>系统的目的就是对应用系统的所有对象资源和数据资源进行权限控制，比如：功能菜单、界面按钮、数据显示的列、各种行级数据进行权限的操控</p>
<h2 id="初始化-RBAC-相关表"><a href="#初始化-RBAC-相关表" class="headerlink" title="初始化 RBAC 相关表"></a>初始化 RBAC 相关表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_permission`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`parent_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'父权限'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'权限名称'</span>,</span><br><span class="line">  <span class="string">`enname`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'权限英文名称'</span>,</span><br><span class="line">  <span class="string">`url`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'授权路径'</span>,</span><br><span class="line">  <span class="string">`description`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'备注'</span>,</span><br><span class="line">  <span class="string">`created`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`updated`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">44</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'权限表'</span>;</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_permission`</span>(<span class="string">`id`</span>,<span class="string">`parent_id`</span>,<span class="string">`name`</span>,<span class="string">`enname`</span>,<span class="string">`url`</span>,<span class="string">`description`</span>,<span class="string">`created`</span>,<span class="string">`updated`</span>) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">37</span>,<span class="number">0</span>,<span class="string">'系统管理'</span>,<span class="string">'System'</span>,<span class="string">'/'</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 23:22:54'</span>,<span class="string">'2019-04-04 23:22:56'</span>),</span><br><span class="line">(<span class="number">38</span>,<span class="number">37</span>,<span class="string">'用户管理'</span>,<span class="string">'SystemUser'</span>,<span class="string">'/users/'</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 23:25:31'</span>,<span class="string">'2019-04-04 23:25:33'</span>),</span><br><span class="line">(<span class="number">39</span>,<span class="number">38</span>,<span class="string">'查看用户'</span>,<span class="string">'SystemUserView'</span>,<span class="string">''</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 15:30:30'</span>,<span class="string">'2019-04-04 15:30:43'</span>),</span><br><span class="line">(<span class="number">40</span>,<span class="number">38</span>,<span class="string">'新增用户'</span>,<span class="string">'SystemUserInsert'</span>,<span class="string">''</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 15:30:31'</span>,<span class="string">'2019-04-04 15:30:44'</span>),</span><br><span class="line">(<span class="number">41</span>,<span class="number">38</span>,<span class="string">'编辑用户'</span>,<span class="string">'SystemUserUpdate'</span>,<span class="string">''</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 15:30:32'</span>,<span class="string">'2019-04-04 15:30:45'</span>),</span><br><span class="line">(<span class="number">42</span>,<span class="number">38</span>,<span class="string">'删除用户'</span>,<span class="string">'SystemUserDelete'</span>,<span class="string">''</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 15:30:48'</span>,<span class="string">'2019-04-04 15:30:45'</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_role`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`parent_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'父角色'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">  <span class="string">`enname`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色英文名称'</span>,</span><br><span class="line">  <span class="string">`description`</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'备注'</span>,</span><br><span class="line">  <span class="string">`created`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`updated`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">38</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'角色表'</span>;</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_role`</span>(<span class="string">`id`</span>,<span class="string">`parent_id`</span>,<span class="string">`name`</span>,<span class="string">`enname`</span>,<span class="string">`description`</span>,<span class="string">`created`</span>,<span class="string">`updated`</span>) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">37</span>,<span class="number">0</span>,<span class="string">'超级管理员'</span>,<span class="string">'admin'</span>,<span class="literal">NULL</span>,<span class="string">'2019-04-04 23:22:03'</span>,<span class="string">'2019-04-04 23:22:05'</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_role_permission`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`role_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色 ID'</span>,</span><br><span class="line">  <span class="string">`permission_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'权限 ID'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">43</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'角色权限表'</span>;</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_role_permission`</span>(<span class="string">`id`</span>,<span class="string">`role_id`</span>,<span class="string">`permission_id`</span>) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">37</span>,<span class="number">37</span>,<span class="number">37</span>),</span><br><span class="line">(<span class="number">38</span>,<span class="number">37</span>,<span class="number">38</span>),</span><br><span class="line">(<span class="number">39</span>,<span class="number">37</span>,<span class="number">39</span>),</span><br><span class="line">(<span class="number">40</span>,<span class="number">37</span>,<span class="number">40</span>),</span><br><span class="line">(<span class="number">41</span>,<span class="number">37</span>,<span class="number">41</span>),</span><br><span class="line">(<span class="number">42</span>,<span class="number">37</span>,<span class="number">42</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'密码，加密存储'</span>,</span><br><span class="line">  <span class="string">`phone`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'注册手机号'</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'注册邮箱'</span>,</span><br><span class="line">  <span class="string">`created`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`updated`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`username`</span> (<span class="string">`username`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`phone`</span> (<span class="string">`phone`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`email`</span> (<span class="string">`email`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">38</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'用户表'</span>;</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_user`</span>(<span class="string">`id`</span>,<span class="string">`username`</span>,<span class="string">`password`</span>,<span class="string">`phone`</span>,<span class="string">`email`</span>,<span class="string">`created`</span>,<span class="string">`updated`</span>) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">37</span>,<span class="string">'admin'</span>,<span class="string">'$2a$10$9ZhDOBp.sRKat4l14ygu/.LscxrMUcDAfeVOEPiYwbcRkoB09gCmi'</span>,<span class="string">'15888888888'</span>,<span class="string">'lee.lusifer@gmail.com'</span>,<span class="string">'2019-04-04 23:21:27'</span>,<span class="string">'2019-04-04 23:21:29'</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tb_user_role`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户 ID'</span>,</span><br><span class="line">  <span class="string">`role_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色 ID'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">38</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'用户角色表'</span>;</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> <span class="string">`tb_user_role`</span>(<span class="string">`id`</span>,<span class="string">`user_id`</span>,<span class="string">`role_id`</span>) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">37</span>,<span class="number">37</span>,<span class="number">37</span>);</span><br></pre></td></tr></table></figure>

<p><strong>自行编写测试类对密码进行加密</strong></p>
<ul>
<li>添加tkmapper依赖</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>service层需要编写两个查询</p>
<ul>
<li>通过用户名获取到对应user对象</li>
<li>通过用户id根据表间关系获取到对应权限permission对象</li>
</ul>
</li>
<li><p>自定义认证授权实现类</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.dszmr.domain.TbPermission;</span><br><span class="line"><span class="keyword">import</span> cn.dszmr.domain.TbUser;</span><br><span class="line"><span class="keyword">import</span> cn.dszmr.service.TbPermissionService;</span><br><span class="line"><span class="keyword">import</span> cn.dszmr.service.TbUserService;</span><br><span class="line"><span class="keyword">import</span> org.assertj.core.util.Lists;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> TbUserService tbUserService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> TbPermissionService tbPermissionService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String s)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">        TbUser tbUser = tbUserService.getByUsername(s);</span><br><span class="line">        List&lt;GrantedAuthority&gt; grantedAuthorities = Lists.newArrayList();</span><br><span class="line">        <span class="keyword">if</span> (tbUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 声明用户授权</span></span><br><span class="line">            List&lt;TbPermission&gt; tbPermissions = tbPermissionService.selectByUserId(tbUser.getId());</span><br><span class="line">            tbPermissions.forEach(tbPermission -&gt; &#123;</span><br><span class="line">                GrantedAuthority grantedAuthority = <span class="keyword">new</span> SimpleGrantedAuthority(tbPermission.getEnname());</span><br><span class="line">                grantedAuthorities.add(grantedAuthority);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// 由框架完成认证工作</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> User(tbUser.getUsername(), tbUser.getPassword(), grantedAuthorities);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>服务器安全配置</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span> <span class="comment">//声明这是一个配置类</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">//加载配置认证信息</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>, securedEnabled = <span class="keyword">true</span>, jsr250Enabled = <span class="keyword">true</span>)<span class="comment">//全局方法拦截</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfiguration</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BCryptPasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 配置默认的加密方式 也就是密码加密</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> UserDetailsService <span class="title">userDetailsService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserDetailsServiceImpl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            auth.userDetailsService(userDetailsService());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 将 check_token 暴露出去，否则资源服务器访问时报 403 错误</span></span><br><span class="line">        web.ignoring().antMatchers(<span class="string">"/oauth/check_token"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>步骤与前两次测试一致</p>
]]></content>
      <categories>
        <category>主流框架</category>
      </categories>
      <tags>
        <tag>安全框架</tag>
        <tag>spring全家桶</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring security oAth2(1)</title>
    <url>/2019/11/20/Spring-security/</url>
    <content><![CDATA[<h2 id="一、Spring-security框架简介"><a href="#一、Spring-security框架简介" class="headerlink" title="一、Spring security框架简介"></a>一、Spring security框架简介</h2><h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><p>​           一个能够为基于Spring的企业应用系统提供声明式的安全访问控制解决方式的安全框架（简单说是对访问权限进行控制），主要核心功能为 认证和授权</p><p>​            认证：判断该用户是否有权限登录该系统</p><p>​            授权：判断该用户是否有权限访问该功能</p><a id="more"></a>


<p>spring security的所有的架构也是基于这两个核心功能去实现的。</p>
<h3 id="2、框架原理"><a href="#2、框架原理" class="headerlink" title="2、框架原理"></a>2、框架原理</h3><p>​     众所周知 想要对对Web资源进行保护，最好的办法莫过于Filter，要想对方法调用进行保护，最好的办法莫过于AOP。所以springSecurity在我们进行用户认证以及授予权限的时候，通过各种各样的拦截器来控制权限的访问，从而实现安全。</p>
<h5 id="关于-oAth2"><a href="#关于-oAth2" class="headerlink" title="关于 oAth2"></a>关于 oAth2</h5><p>​    oAth2不是一种技术，而是一种安全协议</p>
<h3 id="3，框架基础"><a href="#3，框架基础" class="headerlink" title="3，框架基础"></a>3，框架基础</h3><ul>
<li><p>配置认证服务器</p>
<ul>
<li><p>配置客户端信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ClientDetailsServiceConfigurer</span><br></pre></td></tr></table></figure>

<ul>
<li><code>inMemory</code>：内存配置</li>
<li><code>withClient</code>：客户端标识</li>
<li><code>secret</code>：客户端安全码</li>
<li><code>authorizedGrantTypes</code>：客户端授权类型</li>
<li><code>scopes</code>：客户端授权范围</li>
<li><code>redirectUris</code>：注册回调地址</li>
</ul>
</li>
</ul>
</li>
<li><p>配置 Web 安全</p>
</li>
<li><p>通过 GET 请求访问认证服务器获取授权码</p>
<ul>
<li>端点：<code>/oauth/authorize</code></li>
</ul>
</li>
<li><p>通过 POST 请求利用授权码访问认证服务器获取令牌</p>
<ul>
<li>端点：<code>/oauth/token</code></li>
</ul>
</li>
</ul>
<p><strong>默认的端点 URL</strong></p>
<ul>
<li><p><code>/oauth/authorize</code>：授权端点</p>
</li>
<li><p><code>/oauth/token</code>：令牌端点</p>
</li>
<li><p><code>/oauth/confirm_access</code>：用户确认授权提交端点</p>
</li>
<li><p><code>/oauth/error</code>：授权服务错误信息端点</p>
</li>
<li><p><code>/oauth/check_token</code>：用于资源服务访问的令牌解析端点</p>
</li>
<li><p><code>/oauth/token_key</code>：提供公有密匙的端点，如果你使用 JWT 令牌的话</p>
</li>
</ul>
<h3 id="实现逻辑"><a href="#实现逻辑" class="headerlink" title="实现逻辑"></a>实现逻辑</h3><p>  <img src="/2019/11/20/Spring-security/253eb4ef0c03ae7.png" alt="253eb4ef0c03ae7"></p>
<h3 id="具体实现步骤"><a href="#具体实现步骤" class="headerlink" title="具体实现步骤"></a>具体实现步骤</h3><ol>
<li><p>​        创建spring-cloud项目</p>
<ul>
<li>项目根pom        </li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class="line">    &lt;modules&gt;</span><br><span class="line">        &lt;module&gt;spring-security-oauth2-dependencies&lt;/module&gt;</span><br><span class="line">        &lt;module&gt;spring-security-oauth2-server&lt;/module&gt;</span><br><span class="line">    &lt;/modules&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.6.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;groupId&gt;cn.dszmr&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;name&gt;spring-security-test&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;$&#123;java.version&#125;&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;$&#123;java.version&#125;&lt;/maven.compiler.target&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;cn.dszmr&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-security-oauth2-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;project.version&#125;&lt;/version&gt;</span><br><span class="line">                &lt;type&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br><span class="line">    &lt;repositories&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;spring-milestone&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Spring Milestone&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https:<span class="comment">//repo.spring.io/milestone&lt;/url&gt;</span></span><br><span class="line">            &lt;snapshots&gt;</span><br><span class="line">                &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class="line">            &lt;/snapshots&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;spring-snapshot&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Spring Snapshot&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https:<span class="comment">//repo.spring.io/snapshot&lt;/url&gt;</span></span><br><span class="line">            &lt;snapshots&gt;</span><br><span class="line">                &lt;enabled&gt;true&lt;/enabled&gt;</span><br><span class="line">            &lt;/snapshots&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">    &lt;/repositories&gt;</span><br><span class="line">    &lt;pluginRepositories&gt;</span><br><span class="line">        &lt;pluginRepository&gt;</span><br><span class="line">            &lt;id&gt;spring-milestone&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Spring Milestone&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https:<span class="comment">//repo.spring.io/milestone&lt;/url&gt;</span></span><br><span class="line">            &lt;snapshots&gt;</span><br><span class="line">                &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class="line">            &lt;/snapshots&gt;</span><br><span class="line">        &lt;/pluginRepository&gt;</span><br><span class="line">        &lt;pluginRepository&gt;</span><br><span class="line">            &lt;id&gt;spring-snapshot&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Spring Snapshot&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https:<span class="comment">//repo.spring.io/snapshot&lt;/url&gt;</span></span><br><span class="line">            &lt;snapshots&gt;</span><br><span class="line">                &lt;enabled&gt;true&lt;/enabled&gt;</span><br><span class="line">            &lt;/snapshots&gt;</span><br><span class="line">        &lt;/pluginRepository&gt;</span><br><span class="line">    &lt;/pluginRepositories&gt;</span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>项目统一依赖管理项目pom</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.dszmr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>创建认证服务</p>
<ul>
<li>pom</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.dszmr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Boot --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Security --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-oauth2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestone<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestone<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Snapshot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-milestone<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Milestone<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/milestone<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Spring Snapshot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.spring.io/snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>项目application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">oauth2-server</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<ol start="3">
<li><p>认证服务器配置基于内存模式（WebSecurityConfiguration类）</p>
<blockquote>
<p>该类用于配置用户 和分配权限</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span> <span class="comment">//声明这是一个配置类</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">//加载配置认证信息</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>, securedEnabled = <span class="keyword">true</span>, jsr250Enabled = <span class="keyword">true</span>)<span class="comment">//全局方法拦截</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfiguration</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BCryptPasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 配置默认的加密方式 也就是密码加密</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 在内存中创建用户</span></span><br><span class="line">        auth.inMemoryAuthentication()</span><br><span class="line">                <span class="comment">//配置用户名为user 配置密码为123456并加密 配值权限为USER</span></span><br><span class="line">                .withUser(<span class="string">"user"</span>).password(passwordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"USER"</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">"admin"</span>).password(passwordEncoder().encode(<span class="string">"admin888"</span>)).roles(<span class="string">"ADMIN"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="4">
<li><p>认证服务器配置基于内存模式（AuthorizationServerConfiguration类）</p>
<blockquote>
<p>该类用于配置security的授权模式与应用范围</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.dszmr.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span>  <span class="comment">//告诉spring 需要加载那些spring security 的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorizationServerConfiguration</span> <span class="keyword">extends</span> <span class="title">AuthorizationServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BCryptPasswordEncoder passwordEncoder; <span class="comment">//注入密码模式</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 配置客户端</span></span><br><span class="line">        clients</span><br><span class="line">                <span class="comment">// 使用内存设置</span></span><br><span class="line">                .inMemory()</span><br><span class="line">                <span class="comment">// client_id</span></span><br><span class="line">                .withClient(<span class="string">"client"</span>)</span><br><span class="line">                <span class="comment">// client_secret</span></span><br><span class="line">                .secret(passwordEncoder.encode(<span class="string">"secret"</span>))</span><br><span class="line">                <span class="comment">// 授权类型</span></span><br><span class="line">                .authorizedGrantTypes(<span class="string">"authorization_code"</span>)</span><br><span class="line">                <span class="comment">// 授权范围</span></span><br><span class="line">                .scopes(<span class="string">"app"</span>)</span><br><span class="line">                <span class="comment">// 注册回调地址</span></span><br><span class="line">                .redirectUris(<span class="string">"https://www.baidu.com"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过浏览器访问获得令牌<br> 访问  <a href="http://localhost:8080/oauth/authorize?client_id=client&amp;response_type=code" target="_blank" rel="noopener">http://localhost:8080/oauth/authorize?client_id=client&amp;response_type=code</a></p>
<p>​    </p>
<ul>
<li>第一次访问会跳转到登录页面</li>
</ul>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/81b26cd8f499725.png" alt="img"></p>
<ul>
<li>验证成功后会询问用户是否授权客户端</li>
</ul>
<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/6d93fe9ca240195.png" alt="img"></p>
<ul>
<li>选择授权后会跳转到百度，浏览器地址上还会包含一个授权码（<code>code=1JuO6V</code>），浏览器地址栏会显示如下地址：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://www.baidu.com/?code=1JuO6V</span><br></pre></td></tr></table></figure>
</li>
<li><p>向服务器申请令牌</p>
</li>
<li><p>通过 CURL 或是 Postman 请求</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -X POST -H &quot;Content-Type: application/x-www-form-urlencoded&quot; -d &apos;grant_type=authorization_code&amp;code=1JuO6V&apos; &quot;http://client:secret@localhost:8080/oauth/token&quot;</span><br></pre></td></tr></table></figure>

<p><img src="http://www.qfdmy.com/wp-content/uploads/2019/08/1dc1ad17978e97d.png" alt="img"></p>
<ul>
<li>得到响应结果如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;    &quot;access_token&quot;: &quot;016d8d4a-dd6e-4493-b590-5f072923c413&quot;,    &quot;token_type&quot;: &quot;bearer&quot;,    &quot;expires_in&quot;: 43199,    &quot;scope&quot;: &quot;app&quot;&#125;</span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>主流框架</category>
      </categories>
      <tags>
        <tag>安全框架</tag>
        <tag>spring全家桶</tag>
      </tags>
  </entry>
  <entry>
    <title>gateway网关</title>
    <url>/2019/11/20/gateway%E7%BD%91%E5%85%B3/</url>
    <content><![CDATA[<p><strong>实现思想</strong></p><p>一个微服务项目有着很多的服务，但是服务与服务之间的域名肯定不相同那么每一次请求服务时，对于域名的修改就显得极为麻烦了，所以在微服务生态中就有了网关，网关统一请求路径也就是每一个请求都会经过网关，当请求到达gateway时在通过动态路由分配到各个对应的服务</p><p><strong>功能特征</strong></p><ul>
<li>基于 Spring Framework 5，Project Reactor 和 Spring Boot 2.0</li>
<li>动态路由</li>
<li>Predicates 和 Filters 作用于特定路由</li>
<li>集成 Hystrix 断路器</li>
<li>集成 Spring Cloud DiscoveryClient</li>
<li>易于编写的 Predicates 和 Filters</li>
<li>限流</li>
<li>路径重写</li>
</ul><a id="more"></a>



<p><strong>具体拦截与分配代码</strong></p>
<h1 id="采用自定义路由-ID（有固定用法，不同的-id-有不同的功能，详见：https-cloud-spring-io-spring-cloud-gateway-2-0-x-single-spring-cloud-gateway-html-gateway-route-filters）"><a href="#采用自定义路由-ID（有固定用法，不同的-id-有不同的功能，详见：https-cloud-spring-io-spring-cloud-gateway-2-0-x-single-spring-cloud-gateway-html-gateway-route-filters）" class="headerlink" title="采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）"></a>采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：<a href="https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）" target="_blank" rel="noopener">https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）</a></h1><ul>
<li>id: BUSINESS-OAUTH2<h1 id="采用-LoadBalanceClient-方式请求，以-lb-开头，后面的是注册在-Nacos-上的服务名"><a href="#采用-LoadBalanceClient-方式请求，以-lb-开头，后面的是注册在-Nacos-上的服务名" class="headerlink" title="采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名"></a>采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名</h1>uri: lb://business-oauth2<h1 id="Predicate-翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法"><a href="#Predicate-翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法" class="headerlink" title="Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法"></a>Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法</h1>predicates:<h1 id="路径匹配，以-api-开头，直接配置是不生效的，看-filters-配置"><a href="#路径匹配，以-api-开头，直接配置是不生效的，看-filters-配置" class="headerlink" title="路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置"></a>路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置</h1><ul>
<li>Path=/api/user/**<br>filters:<h1 id="前缀过滤，默认配置下，我们的请求路径是-http-localhost-8888-business-oauth2-这时会路由到指定的服务"><a href="#前缀过滤，默认配置下，我们的请求路径是-http-localhost-8888-business-oauth2-这时会路由到指定的服务" class="headerlink" title="前缀过滤，默认配置下，我们的请求路径是 http://localhost:8888/business-oauth2/** 这时会路由到指定的服务"></a>前缀过滤，默认配置下，我们的请求路径是 <a href="http://localhost:8888/business-oauth2/" target="_blank" rel="noopener">http://localhost:8888/business-oauth2/</a>** 这时会路由到指定的服务</h1><h1 id="此处配置去掉-1-个路径前缀，再配置上面的-Path-api-，就能按照-http-localhost-8888-api-的方式访问了"><a href="#此处配置去掉-1-个路径前缀，再配置上面的-Path-api-，就能按照-http-localhost-8888-api-的方式访问了" class="headerlink" title="此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/，就能按照 http://localhost:8888/api/ 的方式访问了"></a>此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/<strong>，就能按照 <a href="http://localhost:8888/api/" target="_blank" rel="noopener">http://localhost:8888/api/</a></strong> 的方式访问了</h1></li>
<li>StripPrefix=1</li>
</ul>
</li>
</ul>
<p><strong>代码实现</strong></p>
<p>创建一个项目名为<strong>gateway</strong></p>
<ol>
<li>添加pom依赖</li>
</ol>
<dependencies>
    <!-- Spring Boot Begin -->
    <dependency>
        <groupid>org.springframework.boot</groupid>
        <artifactid>spring-boot-starter-actuator</artifactid>
    </dependency>
    <dependency>
        <groupid>org.springframework.boot</groupid>
        <artifactid>spring-boot-starter-test</artifactid>
        <scope>test</scope>
    </dependency>
    <!-- Spring Boot End -->
    <!-- Spring Cloud Begin -->
    <dependency>
        <groupid>org.springframework.cloud</groupid>
        <artifactid>spring-cloud-starter-alibaba-nacos-discovery</artifactid>
        <version>0.9.0.RELEASE</version>
    </dependency>
    <dependency>
        <groupid>org.springframework.cloud</groupid>
        <artifactid>spring-cloud-starter-gateway</artifactid>
    </dependency>
    <!-- Spring Cloud End -->
    <!-- Commons Begin -->
    <dependency>
        <groupid>javax.servlet</groupid>
        <artifactid>javax.servlet-api</artifactid>
    </dependency>
    <!-- Commons Begin -->
</dependencies>

<pre><code>2.application.yml</code></pre><p>base:<br>  config:<br>    nacos:<br>      hostname: 106.54.8.126<br>      port: 8848<br>spring:<br>  application:<br>    # 应用名称<br>​    name: gateway<br>  main:<br>​    allow-bean-definition-overriding: true<br>  cloud:<br>    # 使用 Nacos 作为服务注册发现<br>​    nacos:<br>​      discovery:<br>​        server-addr: ${base.config.nacos.hostname}:${base.config.nacos.port}<br>    # 路由网关配置<br>​    gateway:<br>      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略<br>​      discovery:<br>​        locator:<br>​          enabled: true<br>      # 配置路由规则<br>​      routes:<br>        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：<a href="https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）" target="_blank" rel="noopener">https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）</a><br>        - id: BUSINESS-OAUTH2<br>          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名<br>          uri: lb://business-oauth2<br>          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法<br>          predicates:<br>            # 路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置<br>            - Path=/api/user/**<br>          filters:<br>            # 前缀过滤，默认配置下，我们的请求路径是 <a href="http://localhost:8888/business-oauth2/" target="_blank" rel="noopener">http://localhost:8888/business-oauth2/</a>** 这时会路由到指定的服务<br>            # 此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/<strong>，就能按照 <a href="http://localhost:8888/api/" target="_blank" rel="noopener">http://localhost:8888/api/</a></strong> 的方式访问了<br>            - StripPrefix=1<br>                - id: BUSINESS-PROFILE<br>          uri: lb://business-profile<br>          predicates:<br>            - Path=/api/profile/**<br>          filters:<br>            - StripPrefix=1<br>server:<br>      port: 8888</p>
<h1 id="配置日志级别，方别调试"><a href="#配置日志级别，方别调试" class="headerlink" title="配置日志级别，方别调试"></a>配置日志级别，方别调试</h1><p>logging:<br>  level:<br>    org.springframework.cloud.gateway: debug</p>
<p>3.GatewayApplication</p>
<p>import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.cloud.client.discovery.DiscoveryClient;<br>import org.springframework.cloud.client.discovery.EnableDiscoveryClient;<br>import org.springframework.cloud.gateway.discovery.DiscoveryClientRouteDefinitionLocator;<br>import org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties;<br>import org.springframework.cloud.gateway.route.RouteDefinitionLocator;<br>import org.springframework.context.annotation.Bean;<br>import org.springframework.http.HttpHeaders;<br>import org.springframework.http.HttpMethod;<br>import org.springframework.http.HttpStatus;<br>import org.springframework.http.codec.ServerCodecConfigurer;<br>import org.springframework.http.codec.support.DefaultServerCodecConfigurer;<br>import org.springframework.http.server.reactive.ServerHttpRequest;<br>import org.springframework.http.server.reactive.ServerHttpResponse;<br>import org.springframework.web.cors.reactive.CorsUtils;<br>import org.springframework.web.server.ServerWebExchange;<br>import org.springframework.web.server.WebFilter;<br>import org.springframework.web.server.WebFilterChain;<br>import reactor.core.publisher.Mono;<br>/**</p>
<ul>
<li>Spring Cloud Gateway</li>
<li><p></p></li>
<li>Description:</li>
<li><p></p></li>
<li></li>
<li>@author Lusifer</li>
<li>@version v1.0.0</li>
<li>@date 2019-08-01 11:14:35</li>
<li>@see</li>
<li>/<br>@SpringBootApplication<br>@EnableDiscoveryClient<br>public class GatewayApplication {<br>  // —————————– 解决跨域 Begin —————————–<br>  private static final String ALL = “*”;<br>  private static final String MAX_AGE = “3600L”;<br>  @Bean<br>  public RouteDefinitionLocator discoveryClientRouteDefinitionLocator(DiscoveryClient discoveryClient, DiscoveryLocatorProperties properties) {<pre><code>return new DiscoveryClientRouteDefinitionLocator(discoveryClient, properties);</code></pre>  }<br>  @Bean<br>  public ServerCodecConfigurer serverCodecConfigurer() {<pre><code>return new DefaultServerCodecConfigurer();</code></pre>  }<br>  @Bean<br>  public WebFilter corsFilter() {<pre><code>return (ServerWebExchange ctx, WebFilterChain chain) -&gt; {
    ServerHttpRequest request = ctx.getRequest();
    if (!CorsUtils.isCorsRequest(request)) {
        return chain.filter(ctx);
    }
    HttpHeaders requestHeaders = request.getHeaders();
    ServerHttpResponse response = ctx.getResponse();
    HttpMethod requestMethod = requestHeaders.getAccessControlRequestMethod();
    HttpHeaders headers = response.getHeaders();
    headers.add(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, requestHeaders.getOrigin());
    headers.addAll(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, requestHeaders.getAccessControlRequestHeaders());
    if (requestMethod != null) {
        headers.add(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, requestMethod.name());
    }
    headers.add(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, &quot;true&quot;);
    headers.add(HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS, ALL);
    headers.add(HttpHeaders.ACCESS_CONTROL_MAX_AGE, MAX_AGE);
    if (request.getMethod() == HttpMethod.OPTIONS) {
        response.setStatusCode(HttpStatus.OK);
        return Mono.empty();
    }
    return chain.filter(ctx);
};</code></pre>  }<br>  // —————————– 解决跨域 End —————————–<br>  public static void main(String[] args) {<pre><code>SpringApplication.run(GatewayApplication.class, args);</code></pre>  }<br>}</li>
</ul>
]]></content>
      <categories>
        <category>Spring-Cloud-Alibaba</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs设置全局路径后npm报错 已解决</title>
    <url>/2019/11/20/nodejs%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E8%B7%AF%E5%BE%84%E5%90%8Enpm%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>nodejs 在 npm config set prefix “path of npm_global” 设置全局路径后一直出现如下错误</p><p><img src="/2019/11/20/nodejs%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E8%B7%AF%E5%BE%84%E5%90%8Enpm%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/%E5%A4%A7%E5%A4%A7%E5%A4%A7.bmp" alt="大大大"></p><p>解决办法：</p><p>​                <strong>删除c盘用户目录下的.cnpm文件即可解决</strong></p>]]></content>
      <categories>
        <category>bug记录</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>bug记录</tag>
      </tags>
  </entry>
  <entry>
    <title>4，Nacos分布式配置中心</title>
    <url>/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</url>
    <content><![CDATA[<p><strong>以服务消费者service-consumer为例</strong></p><ol>
<li>添加pom依赖</li>
</ol><p><dependency>     <groupid>org.springframework.cloud</groupid>     <artifactid>spring-cloud-starter-alibaba-nacos-config</artifactid> </dependency> </p><p>2.打开nacos 打开 服务配置列表 点击新增配置</p><p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard.png" alt="img"></p><p>3.添加服务</p><p>Data ID 必须是唯一的  </p><a id="more"></a>






<p>以.yaml结尾</p>
<p>并选中配置格式 .yaml</p>
<p>否则系统将默认为.properties文件</p>
<p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard1.png" alt="img"></p>
<p>4.把consumer项目的application.yml 配置复制到</p>
<p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard2.png" alt="img"></p>
<p>后面增加一个节点用于测试</p>
<p>test:     name: “dsz” </p>
<pre><code>5.在controller </code></pre><ul>
<li>添加注解@RefreshScope</li>
</ul>
<p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard3.png" alt="img"></p>
<ul>
<li>注入测试节点</li>
</ul>
<p>@Value(“${test.name}”) private String name; </p>
<ul>
<li>新增测试方法</li>
</ul>
<p>@GetMapping(“name”) public String getName() {     return name; } </p>
<p>6.修改application.yml </p>
<ul>
<li><p>删除 application.yml </p>
</li>
<li><p>添加bootstrap.properties</p>
<p>bootstrap.properties配置内容</p>
</li>
</ul>
<p>#配置的Data ID spring.application.name=service-consumer-config # nacos 的地址 spring.cloud.nacos.config.server-addr= 106.54.8.126:8848  #配置的文件格式 spring.cloud.nacos.config.file-extension=yaml </p>
<p>附：</p>
<p>spring-boot配置文件加载顺序</p>
<p>spring-boot会默认按照如下顺序加载  有时候 application加载不到就是因为 加载顺序的原因</p>
<p>bootstrap.properties-&gt;bootstrap.yml-&gt;application.properties-&gt;application.yml </p>
<p>7.运行测试</p>
<p>访问<a href="http://localhost:8080/name" target="_blank" rel="noopener">http://localhost:8080/name</a></p>
<p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard4.png" alt="img"></p>
<p>修改配置</p>
<p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard5.png" alt="img"></p>
<p>刷新</p>
<p><img src="/2019/11/19/4%EF%BC%8CNacos%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/clipboard6.png" alt="img"></p>
<p>成功！</p>
]]></content>
      <categories>
        <category>Spring-Cloud-Alibaba</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>3，Nacos Feign 客户端</title>
    <url>/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[<p><strong>创建服务消费者spring-cloud-demo-consumer</strong></p><ol>
<li>修改pom添加依赖</li>
</ol><dependencies>
    <!-- Spring Boot Begin -->
    <dependency>
        <groupid>org.springframework.boot</groupid>
        <artifactid>spring-boot-starter-web</artifactid>
    </dependency>
    <dependency>
        <groupid>org.springframework.boot</groupid>
        <artifactid>spring-boot-starter-actuator</artifactid>
    </dependency>
    <dependency>
        <groupid>org.springframework.cloud</groupid>
        <artifactid>spring-cloud-starter-openfeign</artifactid>
    </dependency>
    <!-- Spring Boot End -->
    <!-- Spring Cloud Begin -->
    <dependency>
        <groupid>org.springframework.cloud</groupid>
        <artifactid>spring-cloud-starter-alibaba-nacos-discovery</artifactid>
    </dependency>
    <!-- Spring Cloud End -->
</dependencies><a id="more"></a>





<p>2.创建并修改 application.yml </p>
<p>spring:<br>  application:<br>    # 服务名<br>​    name: service-consumer<br>  cloud:<br>​    nacos:<br>​      discovery:<br>        # 服务注册中心<br>​        server-addr: 192.168.141.132:8848<br>server:</p>
<h1 id="服务端口"><a href="#服务端口" class="headerlink" title="服务端口"></a>服务端口</h1><p>  port: 8080<br>management:</p>
<h1 id="端点检查（健康检查）"><a href="#端点检查（健康检查）" class="headerlink" title="端点检查（健康检查）"></a>端点检查（健康检查）</h1><p>  endpoints:<br>    web:<br>      exposure:<br>        include: “*”</p>
<p>3.创建启动类</p>
<p>import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.cloud.client.discovery.EnableDiscoveryClient; @SpringBootApplication @EnableDiscoveryClient @EnableFeignClients public class ConsumerApplication {     public static void main(String[] args) {         SpringApplication.run(ConsumerApplication.class, args);     } } </p>
<p>4.启动查看nacos</p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard.png" alt="img"></p>
<p>服务注册成功!</p>
<p><strong>使用feign客户端请求provider服务提供者获得服务</strong></p>
<ol>
<li>在consumer创建好目录结构</li>
</ol>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard1.png" alt="img"></p>
<ol>
<li>在service处添加</li>
</ol>
<p>@FeignClient(“service-provider”)这个注解的意思是向名为service-provider的服务发起请求</p>
<p>@GetMapping(“/dsz”) 此注解的意思是向 /dsz 的路径发起get请求</p>
<p>import org.springframework.cloud.openfeign.FeignClient; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PathVariable;  import java.util.List;  @FeignClient(“service-provider”) public interface EchoService {     @GetMapping(“/dsz”)     List<string> getList(); } </string></p>
<p>3.在controller处添加</p>
<p>@RestController public class TestEchoController {       @Autowired     private EchoService echoService;          @GetMapping(value = “/feign/list”)     public List echo() {         return echoService.getList();     } } </p>
<p>4.修改provider项目的controller 创建一个集合并输出</p>
<p>@RestController public class EchoController {      @GetMapping(value = “dsz”)     public List<string> ok(){         ArrayList<string> strings = new ArrayList&lt;&gt;();         strings.add(“dsz1”);         strings.add(“dsz2”);         strings.add(“dsz3”);         strings.add(“dsz4”);         strings.add(“dsz5”);         return strings;     } } </string></string></p>
<p>5.启动项目</p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard2.png" alt="img"></p>
<p>请求成功</p>
<p>这一个小demo的意思就是通过服务消费者的service，去请求服务提供者 ，</p>
<p>获取数据，然后服务消费者进行输出展示最终结果</p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard3.png" alt="img"></p>
<p><strong>feign负载均衡</strong></p>
<p>修改idea 配置</p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard4.png" alt="img"></p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard5.png" alt="img"></p>
<p>启动一台服务提供者provider后</p>
<p>修改端口号 再启动一台</p>
<p>在controller处创建变量提取配置文件端口号 通过端口号的变换 来确定是否实现负载均衡</p>
<ol>
<li>修改controller  添加  </li>
</ol>
<p>@Value(“${server.port}”) private String port;  @GetMapping(value = “/echo/{string}”) public String echo(@PathVariable String string) {     return string+”  您好，负载均衡已经开启 现在是端口为”+port+”的服务器为您提供服务！”; } </p>
<p>2.修改服务消费者consumer service 添加如下配置</p>
<p>@GetMapping(value = “/echo/{string}”) String echo(@PathVariable(“string”) String string); </p>
<p>3.修改controller添加</p>
<p>@GetMapping(value = “/feign/echo/{str}”) public String echo(@PathVariable String str) {     return echoService.echo(str); } </p>
<p>4.浏览器请求  <a href="http://localhost:8080/feign/echo/dsz" target="_blank" rel="noopener">http://localhost:8080/feign/echo/dsz</a></p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard6.png" alt="img"></p>
<p>5.刷新浏览器</p>
<p><img src="/2019/11/19/3%EF%BC%8CNacos-Feign-%E5%AE%A2%E6%88%B7%E7%AB%AF/clipboard7.png" alt="img"></p>
<p>负载均衡成功！</p>
<p><strong>附：扩展阅读</strong></p>
<p><strong>常见负载均衡策略</strong></p>
<p>负载主机可以提供很多种负载均衡方法，也就是我们常说的调度方法或算法</p>
<p><strong>轮循</strong></p>
<p><strong>Round Robin：</strong> 这种方法会将收到的请求循环分配到服务器集群中的每台机器，即有效服务器。如果使用这种方式，所有的标记进入虚拟服务的服务器应该有相近的资源容量 以及负载形同的应用程序。如果所有的服务器有相同或者相近的性能那么选择这种方式会使服务器负载形同。基于这个前提，轮循调度是一个简单而有效的分配请求 的方式。然而对于服务器不同的情况，选择这种方式就意味着能力比较弱的服务器也会在下一轮循环中接受轮循，即使这个服务器已经不能再处理当前这个请求了。 这可能导致能力较弱的服务器超载。</p>
<p><strong>加权轮循</strong></p>
<p><strong>Weighted Round Robin：</strong> 这种算法解决了简单轮循调度算法的缺点：传入的请求按顺序被分配到集群中服务器，但是会考虑提前为每台服务器分配的权重。管理员只是简单的通过服务 器的处理能力来定义各台服务器的权重。例如，能力最强的服务器 A 给的权重是 100，同时能力最低的服务器给的权重是 50。这意味着在服务器 B 接收到第一个 请求之前前，服务器 A 会连续的接受到 2 个请求，以此类推。</p>
<p><strong>最少连接数</strong></p>
<p><strong>Least Connection：</strong> 以上两种方法都没有考虑的是系统不能识别在给定的时间里保持了多少连接。因此可能发生，服务器 B 服务器收到的连接比服务器 A 少但是它已经超载，因为 服务器 B 上的用户打开连接持续的时间更长。这就是说连接数即服务器的负载是累加的。这种潜在的问题可以通过 “最少连接数” 算法来避免：传入的请求是根据每 台服务器当前所打开的连接数来分配的。即活跃连接数最少的服务器会自动接收下一个传入的请求。接本上和简单轮询的原则相同：所有拥有虚拟服务的服务器资源 容量应该相近。值得注意的是，在流量率低的配置环境中，各服务器的流量并不是相同的，会优先考虑第一台服务器。这是因为，如果所有的服务器是相同的，那么 第一个服务器优先，直到第一台服务器有连续的活跃流量，否则总是会优先选择第一台服务器。</p>
<p><strong>最少连接数慢启动时间</strong></p>
<p><strong>Least Connection Slow Start Time：</strong> 对最少连接数和带权重的最小连接数调度方法来说，当一个服务器刚加入线上环境是，可以为其配置一个时间段，在这段时间内连接数是有限制的而且是缓慢 增加的。这为服务器提供了一个‘过渡时间’以保证这个服务器不会因为刚启动后因为分配的连接数过多而超载。这个值在 L7 配置界面设置。</p>
<p><strong>加权最少连接</strong></p>
<p><strong>Weighted Least Connection：</strong> 如果服务器的资源容量各不相同，那么 “加权最少连接” 方法更合适：由管理员根据服务器情况定制的权重所决定的活跃连接数一般提供了一种对服务器非常 平衡的利用，因为他它借鉴了最少连接和权重两者的优势。通常，这是一个非常公平的分配方式，因为它使用了连接数和服务器权重比例；集群中比例最低的服务器 自动接收下一个请求。但是请注意，在低流量情况中使用这种方法时，请参考 “最小连接数” 方法中的注意事项。</p>
<p><strong>基于代理的自适应负载均衡</strong></p>
<p><strong>Agent Based Adaptive Balancing：</strong> 除了上述方法之外，负载主机包含一个自适用逻辑用来定时监测服务器状态和该服务器的权重。对于非常强大的 “基于代理的自适应负载均衡” 方法来说，负 载主机以这种方式来定时检测所有服务器负载情况：每台服务器都必须提供一个包含文件，这个文件包含一个 0~99 的数字用来标明改服务器的实际负载情况 (0 = 空前，99 = 超载，101 = 失败，102 = 管理员禁用)，而服务器同构 http get 方法来获取这个文件；同时对集群中服务器来说，以二进制文件形式提供自身负载情况也是该服务器工作之一，然而，并没有限制服务器如何计算自身的负载 情况。根据服务器整体负载情况，有两种策略可以选择：在常规的操作中，调度算法通过收集的服务器负载值和分配给该服务器的连接数的比例计算出一个权重比 例。因此，如果一个服务器负载过大，权重会通过系统透明的作重新调整。和加权轮循调度方法一样，不正确的分配可以被记录下来使得可以有效的为不同服务器分 配不同的权重。然而，在流量非常低的环境下，服务器报上来的负载值将不能建立一个有代表性的样本；那么基于这些值来分配负载的话将导致失控以及指令震荡。 因此，在这种情况下更合理的做法是基于静态的权重比来计算负载分配。当所有服务器的负载低于管理员定义的下限时，负载主机就会自动切换为加权轮循方式来分 配请求；如果负载大于管理员定义的下限，那么负载主机又会切换回自适应方式。</p>
<p><strong>固定权重</strong></p>
<p><strong>Fixed Weighted：</strong> 最高权重只有在其他服务器的权重值都很低时才使用。然而，如果最高权重的服务器下降，则下一个最高优先级的服务器将为客户端服务。这种方式中每个真实服务器的权重需要基于服务器优先级来配置。</p>
<p><strong>加权响应</strong></p>
<p><strong>Weighted Response：</strong> 流量的调度是通过加权轮循方式。加权轮循中所使用的权重是根据服务器有效性检测的响应时间来计算。每个有效性检测都会被计时，用来标记它响应成功花 了多长时间。但是需要注意的是，这种方式假定服务器心跳检测是基于机器的快慢，但是这种假设也许不总是能够成立。所有服务器在虚拟服务上的响应时间的总和 加在一起，通过这个值来计算单个服务物理服务器的权重；这个权重值大约每 15 秒计算一次。</p>
<p><strong>源 IP 哈希</strong></p>
<p><strong>Source IP Hash：</strong> 这种方式通过生成请求源 IP 的哈希值，并通过这个哈希值来找到正确的真实服务器。这意味着对于同一主机来说他对应的服务器总是相同。使用这种方式，你不需要保存任何源 IP。但是需要注意，这种方式可能导致服务器负载不平衡。</p>
]]></content>
      <categories>
        <category>Spring-Cloud-Alibaba</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>2，服务注册与发现Nacos</title>
    <url>/2019/11/19/2%EF%BC%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0Nacos/</url>
    <content><![CDATA[<p>Nacos需要部署 所以想自己部署的同学请移步docker学习</p><p><strong>部署操作步骤</strong></p><ol>
<li><strong>Clone 项目</strong></li>
</ol><p>git clone <a href="https://github.com/nacos-group/nacos-docker.git" target="_blank" rel="noopener">https://github.com/nacos-group/nacos-docker.git</a> cd nacos-docker </p><ol>
<li><strong>单机模式</strong></li>
</ol><p>docker-compose -f example/standalone-mysql.yaml up -d </p><a id="more"></a>





<p><strong>3.查看日志</strong></p>
<p>docker-compose -f example/standalone-mysql.yaml logs -f </p>
<p><strong>4.Nacos 控制台</strong></p>
<p>​         <a href="http://www.qfdmy.com/wp-content/themes/quanbaike/go.php?url=aHR0cDovLzE5Mi4xNjguMTQxLjEzMjo4ODQ4L25hY29z" target="_blank" rel="noopener">http://服务器地址:8848/nacos</a></p>
<p>如果想以后再部署的同学可以使用我的nacos</p>
<p>​        <a href="http://106.54.8.126:8848/nacos" target="_blank" rel="noopener">http://106.54.8.126:8848/nacos</a></p>
<p>账号：nacos</p>
<p>密码：nacos</p>
<p><strong>服务注册与发现</strong></p>
<p>新增模块  spring-cloud-demo-provider服务提供者</p>
<p><img src="/2019/11/19/2%EF%BC%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0Nacos/clipboard.png" alt="img"></p>
<p><strong>添加pom依赖</strong></p>
<p>注：如遇maven报错请移步《maven报错解决》</p>
<dependencies>
    <!-- Spring Boot Begin -->
    <dependency>
        <groupid>org.springframework.boot</groupid>
        <artifactid>spring-boot-starter-web</artifactid>
    </dependency>
    <dependency>
        <groupid>org.springframework.boot</groupid>
        <artifactid>spring-boot-starter-actuator</artifactid>
    </dependency>
    <!-- Spring Boot End -->
    <!-- Spring Cloud Begin -->
    <dependency>
        <groupid>org.springframework.cloud</groupid>
        <artifactid>spring-cloud-starter-alibaba-nacos-discovery</artifactid>
    </dependency>
    <!-- Spring Cloud End -->
</dependencies>



<p><strong>项目结构</strong></p>
<p><img src="/2019/11/19/2%EF%BC%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0Nacos/clipboard1.png" alt="img"></p>
<ol>
<li>创建启动类</li>
</ol>
<p>import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.cloud.client.discovery.EnableDiscoveryClient;   @SpringBootApplication @EnableDiscoveryClient public class ProviderApplication {     public static void main(String[] args) {         SpringApplication.run(ProviderApplication.class, args);     } } </p>
<p>2.创建controller</p>
<p>@RestController public class EchoController {      @GetMapping(value = “/echo/{string}”)     public String echo(@PathVariable String string) {         return “hello “+string;     }     } </p>
<p>3.创建application.yml</p>
<p>spring:<br>  application:<br>    # 服务名<br>​    name: service-provider<br>  cloud:<br>​    nacos:<br>​      discovery:<br>        # 服务注册中心<br>​        server-addr: 106.54.8.126:8848<br>server:</p>
<h1 id="服务端口"><a href="#服务端口" class="headerlink" title="服务端口"></a>服务端口</h1><p>  port: 8071<br>management:</p>
<h1 id="端点检查（健康检查）"><a href="#端点检查（健康检查）" class="headerlink" title="端点检查（健康检查）"></a>端点检查（健康检查）</h1><p>  endpoints:<br>    web:<br>      exposure:<br>        include: “*”</p>
<p><strong>运行项目</strong></p>
<p>访问 ： <a href="http://localhost:8070/echo/dsz" target="_blank" rel="noopener">http://localhost:8070/echo/dsz</a> </p>
<p><strong>再登录nacos</strong></p>
<p>前面有说如何登录</p>
<p><img src="/2019/11/19/2%EF%BC%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0Nacos/clipboard2.png" alt="img"></p>
<p>显示服务名即表示服务注册成功</p>
]]></content>
      <categories>
        <category>Spring-Cloud-Alibaba</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>1，统一依赖管理</title>
    <url>/2019/11/19/1%EF%BC%8C%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p><strong>创建一个普通spring-boot工程</strong></p><p><img src="/2019/11/19/1%EF%BC%8C%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/clipboard.png" alt="img"></p><p><strong>修改pom文件</strong></p><ol>
<li>修改pom文件默认打包方式为pom</li>
</ol><p><packaging>pom</packaging> </p><ol>
<li>添加统一版本管理</li>
</ol><p><properties>     &lt;java.version&gt;1.8&lt;/java.version&gt;     &lt;maven.compiler.source&gt;${java.version}&lt;/maven.compiler.source&gt;     &lt;maven.compiler.target&gt;${java.version}&lt;/maven.compiler.target&gt;     &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;     &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; </properties> </p><a id="more"></a>






<p>3.添加插件管理</p>
<p>插件管理备注：</p>
<p>  <id>default</id> 这是一个标注现在状态的一个属性 可以自定义</p>
  <activation>

<p>​            <activebydefault>true</activebydefault></p>
  </activation>

<p>表示为默认使用状态 如果不使用可以设置为false</p>
<p>spring.javaformat</p>
<p>代码格式化插件 可以将代码格式化为spring风格</p>
<p>maven-surefire-plugin</p>
<p>测试运行器</p>
<p>maven-enforcer-plugin</p>
<p>用于管理jar包冲突 如遇jar包冲突允许即可打印冲突jar包</p>
<p>maven-install-plugin</p>
<p>maven的默认插件之一</p>
<p>maven-javadoc-plugin</p>
<p>生成javadoc文档工具 与java8有冲突 可以不使用</p>
<profiles>
    <profile>
        <id>default</id>
        <activation>
            <activebydefault>true</activebydefault>
        </activation>
        <properties>
            <spring-javaformat.version>0.0.12</spring-javaformat.version>
        </properties>
        <build>
            <plugins>
                <plugin>
                    <groupid>io.spring.javaformat</groupid>
                    <artifactid>spring-javaformat-maven-plugin</artifactid>
                    <version>${spring-javaformat.version}</version>
                </plugin>
                <plugin>
                    <groupid>org.apache.maven.plugins</groupid>
                    <artifactid>maven-surefire-plugin</artifactid>
                    <configuration>
                        <includes>
                            <include>**/*Tests.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/Abstract*.java</exclude>
                        </excludes>
                        <systempropertyvariables>
                            <java.security.egd>file:/dev/./urandom</java.security.egd>
                            <java.awt.headless>true</java.awt.headless>
                        </systempropertyvariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupid>org.apache.maven.plugins</groupid>
                    <artifactid>maven-enforcer-plugin</artifactid>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <banneddependencies>
                                        <excludes>
                                            <exclude>commons-logging:*:*</exclude>
                                        </excludes>
                                        <searchtransitive>true</searchtransitive>
                                    </banneddependencies>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupid>org.apache.maven.plugins</groupid>
                    <artifactid>maven-install-plugin</artifactid>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupid>org.apache.maven.plugins</groupid>
                    <artifactid>maven-javadoc-plugin</artifactid>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                    <inherited>true</inherited>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>
<repositories>
    <repository>
        <id>spring-milestone</id>
        <name>Spring Milestone</name>
        <url>https://repo.spring.io/milestone</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
    </repository>
    <repository>
        <id>spring-snapshot</id>
        <name>Spring Snapshot</name>
        <url>https://repo.spring.io/snapshot</url>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
    </repository>
</repositories>

<p><strong>创建统一依赖管理</strong></p>
<p><strong>创建模块</strong> </p>
<p><img src="/2019/11/19/1%EF%BC%8C%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/clipboard1.png" alt="img"></p>
<p><strong>修改pom</strong> </p>
<p><strong>更改打包方式为 pom</strong></p>
<ol>
<li>统一版本</li>
</ol>
<p><strong>这里注意了 spring boot 版本一定要对应 spring cloud版本 如果不对应 那么迎接而来的一定是各种莫名其妙的问题，而且还不会报版本错误，俗称版本坑</strong> </p>
<p>这是版本对应表</p>
<table>
<thead>
<tr>
<th>Spring Boot</th>
<th>Spring Cloud</th>
</tr>
</thead>
<tbody><tr>
<td>1.2.x</td>
<td>Angel版本</td>
</tr>
<tr>
<td>1.3.x</td>
<td>Brixton版本</td>
</tr>
<tr>
<td>1.4.x stripes</td>
<td>Camden版本</td>
</tr>
<tr>
<td>1.5.x</td>
<td>Dalston版本、Edgware版本</td>
</tr>
<tr>
<td>2.0.x</td>
<td>Finchley版本</td>
</tr>
<tr>
<td>2.1.x</td>
<td>Greenwich.SR2</td>
</tr>
<tr>
<td>2.2.x</td>
<td>Hoxton</td>
</tr>
</tbody></table>
<p> <properties>          <!--这里填对应版本 列如我使用的是2.2.0 所以是-->         &lt;spring-cloud.version&gt;Hoxton.M3&lt;/spring-cloud.version&gt;         &lt;spring-cloud-alibaba.version&gt;0.9.0.RELEASE&lt;/spring-cloud-alibaba.version&gt;     </properties> </p>
<p>2.依赖cloud项目</p>
<dependencymanagement>
    <dependencies>
        <dependency>
            <groupid>org.springframework.cloud</groupid>
            <artifactid>spring-cloud-dependencies</artifactid>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupid>org.springframework.cloud</groupid>
            <artifactid>spring-cloud-alibaba-dependencies</artifactid>
            <version>${spring-cloud-alibaba.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencymanagement>



<p><strong>再让父pom依赖dependencies</strong></p>
<p>添加依赖管理 把整个项目的依赖交由dependencies管理</p>
<dependencymanagement>
    <dependencies>
        <dependency>
            <groupid>cn.dszmr</groupid>
            <artifactid>spring-cloud-demo-dependencies</artifactid>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencymanagement>
<modules>
    <module>spring-cloud-demo-dependencies</module>
</modules>





<p><strong>完整父pom文件（供参考）</strong></p>
<?xml version="1.0" encoding="UTF-8"?>
<p><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemalocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"><br>    <modelversion>4.0.0</modelversion><br>    <modules><br>        <module>spring-cloud-demo-dependencies</module><br>    </modules><br>    <parent><br>        <groupid>org.springframework.boot</groupid><br>        <artifactid>spring-boot-starter-parent</artifactid><br>        <version>2.2.0.RELEASE</version><br>        <relativepath> <!-- lookup parent from repository --><br>    </relativepath></parent><br>    <groupid>cn.dszmr</groupid><br>    <artifactid>spring-cloud-demo</artifactid><br>    <version>0.0.1-SNAPSHOT</version><br>    <name>spring-cloud-demo</name><br>    <packaging>pom</packaging><br>    <description>Demo project for Spring Boot</description></project></p>
<p>​    <properties><br>​        &lt;java.version&gt;1.8&lt;/java.version&gt;<br>​        &lt;maven.compiler.source&gt;${java.version}&lt;/maven.compiler.source&gt;<br>​        &lt;maven.compiler.target&gt;${java.version}&lt;/maven.compiler.target&gt;<br>​        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;<br>​        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;<br>​    </properties></p>
<p>​    <dependencymanagement><br>​        <dependencies><br>​            <dependency><br>​                <groupid>cn.dszmr</groupid><br>​                <artifactid>spring-cloud-demo-dependencies</artifactid><br>​                <version>${project.version}</version><br>​                <type>pom</type><br>​                <scope>import</scope><br>​            </dependency><br>​        </dependencies><br>​    </dependencymanagement></p>
<p>​    <profiles><br>​        <profile><br>​            <id>default</id><br>​            <activation><br>​                <activebydefault>true</activebydefault><br>​            </activation><br>​            <properties><br>​                &lt;spring-javaformat.version&gt;0.0.12&lt;/spring-javaformat.version&gt;<br>​            </properties><br>​            <build><br>​                <plugins><br>​                    <plugin><br>​                        <groupid>io.spring.javaformat</groupid><br>​                        <artifactid>spring-javaformat-maven-plugin</artifactid><br>​                        <version>${spring-javaformat.version}</version><br>​                    </plugin><br>​                    <plugin><br>​                        <groupid>org.apache.maven.plugins</groupid><br>​                        <artifactid>maven-surefire-plugin</artifactid><br>​                        <configuration><br>​                            <includes><br>​                                <include><strong>/*Tests.java</strong></include><br>​                            </includes><br>​                            <excludes><br>​                                <exclude>/Abstract<em>.java</em></exclude><br>​                            </excludes><br>​                            <systempropertyvariables><br>​                                &lt;java.security.egd&gt;file:/dev/./urandom&lt;/java.security.egd&gt;<br>​                                &lt;java.awt.headless&gt;true&lt;/java.awt.headless&gt;<br>​                            </systempropertyvariables><br>​                        </configuration><br>​                    </plugin><br>​                    <plugin><br>​                        <groupid>org.apache.maven.plugins</groupid><br>​                        <artifactid>maven-enforcer-plugin</artifactid><br>​                        <executions><br>​                            <execution><br>​                                <id>enforce-rules</id><br>​                                <goals><br>​                                    <goal>enforce</goal><br>​                                </goals><br>​                                <configuration><br>​                                    <rules><br>​                                        <banneddependencies><br>​                                            <excludes><br>​                                                <exclude>commons-logging::*</exclude><br>​                                            </excludes><br>​                                            <searchtransitive>true</searchtransitive><br>​                                        </banneddependencies><br>​                                    </rules><br>​                                    <fail>true</fail><br>​                                </configuration><br>​                            </execution><br>​                        </executions><br>​                    </plugin><br>​                    <plugin><br>​                        <groupid>org.apache.maven.plugins</groupid><br>​                        <artifactid>maven-install-plugin</artifactid><br>​                        <configuration><br>​                            <skip>true</skip><br>​                        </configuration><br>​                    </plugin><br>​                    <plugin><br>​                        <groupid>org.apache.maven.plugins</groupid><br>​                        <artifactid>maven-javadoc-plugin</artifactid><br>​                        <configuration><br>​                            <skip>true</skip><br>​                        </configuration><br>​                        <inherited>true</inherited><br>​                    </plugin><br>​                </plugins><br>​            </build><br>​        </profile><br>​    </profiles><br>​    <repositories><br>​        <repository><br>​            <id>spring-milestone</id><br>​            <name>Spring Milestone</name><br>​            <url><a href="https://repo.spring.io/milestone" target="_blank" rel="noopener">https://repo.spring.io/milestone</a></url><br>​            <snapshots><br>​                <enabled>false</enabled><br>​            </snapshots><br>​        </repository><br>​        <repository><br>​            <id>spring-snapshot</id><br>​            <name>Spring Snapshot</name><br>​            <url><a href="https://repo.spring.io/snapshot" target="_blank" rel="noopener">https://repo.spring.io/snapshot</a></url><br>​            <snapshots><br>​                <enabled>true</enabled><br>​            </snapshots><br>​        </repository><br>​    </repositories></p>




<p><strong>完整dependencies依赖管理pom</strong></p>
<?xml version="1.0" encoding="UTF-8"?>
<p><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemalocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><br>    <parent><br>        <artifactid>spring-cloud-demo</artifactid><br>        <groupid>cn.dszmr</groupid><br>        <version>0.0.1-SNAPSHOT</version><br>    </parent><br>    <modelversion>4.0.0</modelversion><br>    <packaging>pom</packaging></project></p>
<p>​    <artifactid>spring-cloud-demo-dependencies</artifactid><br>​    <properties><br>​        <!--这里填对应版本 列如我使用的是2.2.0 所以是Hoxton--><br>​        &lt;spring-cloud.version&gt;Hoxton.RELEASE&lt;/spring-cloud.version&gt;<br>​        &lt;spring-cloud-alibaba.version&gt;0.9.0.RELEASE&lt;/spring-cloud-alibaba.version&gt;<br>​    </properties></p>
<p>​    <dependencymanagement><br>​        <dependencies><br>​            <dependency><br>​                <groupid>org.springframework.cloud</groupid><br>​                <artifactid>spring-cloud-dependencies</artifactid><br>​                <version>${spring-cloud.version}</version><br>​                <type>pom</type><br>​                <scope>import</scope><br>​            </dependency><br>​            <dependency><br>​                <groupid>org.springframework.cloud</groupid><br>​                <artifactid>spring-cloud-alibaba-dependencies</artifactid><br>​                <version>${spring-cloud-alibaba.version}</version><br>​                <type>pom</type><br>​                <scope>import</scope><br>​            </dependency><br>​        </dependencies><br>​    </dependencymanagement></p>
]]></content>
      <categories>
        <category>Spring-Cloud-Alibaba</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>5，sentinel服务熔断</title>
    <url>/2019/11/18/%E6%9C%8D%E5%8A%A1%E7%86%94%E6%96%AD/</url>
    <content><![CDATA[<p>sentinel是阿里巴巴开源，应对高并发场景的解决方案</p><p>下载解压</p><p>链接：<a href="https://pan.baidu.com/s/1LxdagBPi45ImssNFxIlgmA" target="_blank" rel="noopener">https://pan.baidu.com/s/1LxdagBPi45ImssNFxIlgmA</a> 密码：t9so </p><p><img src="/2019/11/18/%E6%9C%8D%E5%8A%A1%E7%86%94%E6%96%AD/clipboard.png" alt="img"></p><p>点击启动文件启动项目</p><p>访问<a href="http://localhost:9527/" target="_blank" rel="noopener">http://localhost:9527</a></p><p>账号 密码 都是 sentinel</p><p>修改服务消费者 consuner </p><a id="more"></a>







<p>填加依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;     &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;     &lt;artifactId&gt;spring-cloud-starter-alibaba-sentinel&lt;/artifactId&gt; &lt;/dependency&gt;</span><br></pre></td></tr></table></figure>



<p>修改配置文件</p>
<p>spring:<br>  application:<br>    # 服务名<br>​    name: service-consumer<br>  cloud:<br>​    nacos:<br>​      discovery:<br>        # 服务注册中心<br>​        server-addr: 192.168.141.132:8848<br>​      config:<br>        # 服务配置中心<br>​        server-addr: 192.168.141.132:8848<br>    # 熔断限流<br>​    sentinel:<br>​      transport:<br>​        dashboard: localhost:8888</p>
<h1 id="开启-Feign-对-Sentinel-的支持"><a href="#开启-Feign-对-Sentinel-的支持" class="headerlink" title="开启 Feign 对 Sentinel 的支持"></a>开启 Feign 对 Sentinel 的支持</h1><p>feign:<br>  sentinel:<br>    enabled: true<br>server:</p>
<h1 id="服务端口"><a href="#服务端口" class="headerlink" title="服务端口"></a>服务端口</h1><p>  port: 8080<br>management:</p>
<h1 id="端点检查（健康检查）"><a href="#端点检查（健康检查）" class="headerlink" title="端点检查（健康检查）"></a>端点检查（健康检查）</h1><p>  endpoints:<br>    web:<br>      exposure:<br>        include: “*”<br>test<br>    name: “dsz”</p>
<p>创建一个熔断类</p>
<p>继承service    当service无法请求到服务提供者时 将会执行这个方法的固定返回值</p>
<p>@Component public class EchoServiceFallback implements EchoService {     @Override     public String echo(String string) {         return “echo fallback”;     }     @Override     public String lb() {         return “lb fallback”;     } } </p>
<p>在service 的注解上添加 fallback 指向熔断类</p>
<p>@FeignClient(value = “service-provider”, fallback = EchoServiceFallback.class) </p>
<p>启动 consuner 关闭 provider</p>
<p>访问 <a href="http://localhost:8080/feign/echo/dsz" target="_blank" rel="noopener">http://localhost:8080/feign/echo/dsz</a></p>
<p><img src="/2019/11/18/%E6%9C%8D%E5%8A%A1%E7%86%94%E6%96%AD/clipboard1.png" alt="img"></p>
<p><img src="/2019/11/18/%E6%9C%8D%E5%8A%A1%E7%86%94%E6%96%AD/clipboard2.png" alt="img"></p>
]]></content>
      <categories>
        <category>Spring-Cloud-Alibaba</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
</search>
